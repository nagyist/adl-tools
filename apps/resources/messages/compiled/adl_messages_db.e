note
	component:   "Eiffel Object Modelling Framework"
	description: "Generated class from message text files"
	keywords:    "Internationalisation, I18N, Localisation, L10N, command line"
	author:      "Thomas Beale <thomas.beale@openehr.org>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2012- The openEHR Foundation <http://www.openEHR.org>"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ADL_MESSAGES_DB

inherit
	ADL_MESSAGES_IDS

	MESSAGE_DB
		redefine
			make
		end

create
	make

feature -- Initialisation

	make
		do
			create message_table.make (982)
			message_table.put ("Terminology initialisation failed; reason: $1", ec_terminology_init_failed)
			message_table.put ("Using ADL version $1 for output serialisation", ec_adl_version_warning)
			message_table.put ("Validation level STRICT", ec_validation_strict)
			message_table.put ("Validation level NON-STRICT; non-conforming existence, occurrences & cardinality will be removed", ec_validation_non_strict)
			message_table.put ("Duplicate term found during terminology initialisation: code=$1; lang=$2; group=$3", ec_duplicate_term_found)
			message_table.put ("Generated differential archetype from specialised flat archetype", ec_arch_context_make_flat_i1)
			message_table.put ("**** $1 %N", ec_compiler_status)
			message_table.put ("**** Finished $1 **** %N", ec_compiler_finished_status)
			message_table.put ("**** Building system ****%N", ec_compiler_building_system)
			message_table.put ("**** Build complete: total=$1; valid=$2; warnings=$3; errors=$4 ****%N", ec_compiler_finished_building_system)
			message_table.put ("**** rebuilding system from scratch", ec_compiler_rebuilding_system)
			message_table.put ("**** Rebuild complete: total=$1; valid=$2; warnings=$3; errors=$4 ****%N", ec_compiler_finished_rebuilding_system)
			message_table.put ("**** exporting built library as $1 to $2 %N", ec_compiler_export)
			message_table.put ("**** Finished library export **** %N", ec_compiler_finished_export)
			message_table.put ("---- compiling $1 ---- $2 ", ec_compiler_compiling_archetype)
			message_table.put ("---- $1 ---- $2 (already attempted - FAILED) %N$2", ec_compiler_already_attempted_failed)
			message_table.put ("---- $1 ---- $2 (already attempted - PASSED) ", ec_compiler_already_attempted_validated)
			message_table.put ("---- $1 ---- $2 (already attempted - PASSED with warnings) %N$3", ec_compiler_already_attempted_validated_with_warnings)
			message_table.put ("Location: $1", ec_compiler_unexpected_error)
			message_table.put ("EXCEPTION in build of archetype $1; details = $2; stack = $3", ec_compile_exception)
			message_table.put ("EXCEPTION in export of archetype $1; details = $2; stack = $3", ec_export_exception)
			message_table.put ("Infinite compilation dependency loop detected on archetype $1; descent depth = $2; quitting", ec_compiler_infinite_regress)
			message_table.put ("************* interrupted *************%N", ec_compiler_interrupted)
			message_table.put ("(Exception trace not available)", ec_compiler_exception_trace_unavailable)
			message_table.put ("Object deserialisation from ODIN failed; type = $1", ec_deserialise_e1)
			message_table.put ("Moved copyright from RESOURCE_DESCRIPTION.details.copyright to RESOURCE_DESCRIPTION.copyright; save to fix permanently", ec_old_copyright)
			message_table.put ("specialisation parent is missing", ec_validate_e1)
			message_table.put ("archetype id in descriptor $1 does not match id at top of file $2", ec_validate_e3)
			message_table.put ("Removing generated file $1", ec_clean_generated_file)
			message_table.put ("specialisation parent $1 failed to validate", ec_compile_e1)
			message_table.put ("Archetype $1 --> parsed ok", ec_parse_i1)
			message_table.put ("Parsing Archetype differential file", ec_parse_i2)
			message_table.put ("Archetype $1 parent has changed from $2 to $3; refresh required (^R)", ec_parse_w1)
			message_table.put ("LEGACY Archetype $1 --> Parsed ok", ec_compile_legacy_i1)
			message_table.put ("Archetype $1 semantics VALIDATED", ec_parse_archetype_i2)
			message_table.put ("component artefact $1 failed to validate", ec_compile_e2)
			message_table.put ("No parent matching $1 found for archetype $2", ec_arch_cat_orphan_archetype)
			message_table.put ("No class node matching $1 found for archetype $2; incorrect id?", ec_arch_cat_orphan_archetype_e2)
			message_table.put ("Duplicate archetype $1", ec_arch_cat_dup_archetype)
			message_table.put ("Invalid regular expression $1", ec_regex_e1)
			message_table.put ("ADL2 archetype filename $1 missing 3-part version; renamed to $2", ec_renamed_old_adls_filename)
			message_table.put ("ADL2 archetype files $1 and $2 both exist; manual fix required (only latter should exist)", ec_old_and_new_adls_filename)
			message_table.put ("ADL2 archetype filename $1 missing 3-part version; no thumbnail generated; faulty? - ignored", ec_faulty_old_adls_filename)
			message_table.put ("Syntax element upgraded: --$1-- changed to --$2--", ec_syntax_upgraded_i1)
			message_table.put ("Invalid archetype filename $1", ec_invalid_filename_e1)
			message_table.put ("Archetype saved to $2", ec_save_as_i1)
			message_table.put ("Save-as failed; could not write to file $1", ec_save_as_e1)
			message_table.put ("Duplicate file name or alternate version $1", ec_duplicate_filename)
			message_table.put ("No BMM Schema found for archetype $1 with id $2 (wrong id, or schema not loaded)", ec_parse_archetype_e4)
			message_table.put ("(Differential/flat pair archetype filename found $1)", ec_pair_filename_i1)
			message_table.put ("Archetype $1 basic error in 'archetype' clause", ec_parse_archetype_e5)
			message_table.put ("Archetype $1 invalid: old-style 'draft' identifier $2", ec_parse_archetype_e7)
			message_table.put ("Archetype at $1 invalid: old-style 'draft' parent identifier $2", ec_parse_archetype_e11)
			message_table.put ("Archetype at $1 invalid identifier $2", ec_parse_archetype_e8)
			message_table.put ("Archetype at $1 invalid artefact type $2 (should be 'archetype', 'template', etc)", ec_parse_archetype_e9)
			message_table.put ("Archetype at $1 invalid parent identifier $2", ec_parse_archetype_e10)
			message_table.put ("Total nodes", ec_arch_stats_object_nodes_text)
			message_table.put ("Archetypable nodes", ec_arch_stats_archetypable_nodes_text)
			message_table.put ("Data value nodes", ec_arch_stats_data_value_nodes_text)
			message_table.put ("Id-codes (semantic)", ec_arch_stats_id_codes_text)
			message_table.put ("At-codes (coded values)", ec_arch_stats_at_codes_text)
			message_table.put ("Ac-codes (value-sets)", ec_arch_stats_ac_codes_text)
			message_table.put ("Id-code bindings", ec_arch_stats_id_code_bindings_text)
			message_table.put ("Ac-code bindings", ec_arch_stats_ac_code_bindings_text)
			message_table.put ("At-code bindings", ec_arch_stats_at_code_bindings_text)
			message_table.put ("Total archetypes", ec_arch_stats_total_archetypes_text)
			message_table.put ("Valid archetypes", ec_arch_stats_valid_archetypes_text)
			message_table.put ("Specialised archetypes", ec_arch_stats_specialised_archetypes_text)
			message_table.put ("Client archetypes", ec_arch_stats_client_archetypes_text)
			message_table.put ("Supplier archetypes", ec_arch_stats_supplier_archetypes_text)
			message_table.put ("Primitive", ec_arch_stats_primitive_text)
			message_table.put ("Non-primitive", ec_arch_stats_non_primitive_text)
			message_table.put ("Syntax error (unknown cause)", ec_SUNK)
			message_table.put ("Syntax error in artefact identification clause; expecting archetype id (format = model_issuer-package-class.concept.version)", ec_SARID)
			message_table.put ("Syntax error in 'specialise' clause; expecting parent archetype id (model_issuer-ref_model-model_class.concept.version)", ec_SASID)
			message_table.put ("Syntax error in 'concept' clause; expecting TERM_CODE reference", ec_SACO)
			message_table.put ("Syntax error in language section", ec_SALA)
			message_table.put ("Syntax error no language section found", ec_SALAN)
			message_table.put ("Syntax error in description section", ec_SADS)
			message_table.put ("Syntax error in definition section", ec_SADF)
			message_table.put ("Syntax error in invariant section", ec_SAIV)
			message_table.put ("Syntax error in terminology section", ec_SAON)
			message_table.put ("Syntax error in annotations section", ec_SAAN)
			message_table.put ("Syntax error in template overlays", ec_STOV)
			message_table.put ("Syntax error: differential syntax not allowed in top-level archetype", ec_SDSF)
			message_table.put ("Syntax error: invalid ODIN section; error: $1", ec_SDINV)
			message_table.put ("Syntax error: expecting a new node definition, primitive node definition, 'use' path, or 'archetype' reference", ec_SCCOG)
			message_table.put ("Syntax error: expecting [idN, archetype_id] in use_archetype statement", ec_SUAID)
			message_table.put ("Syntax error: invalid archetype id $1", ec_SUAIDI)
			message_table.put ("Syntax error: expecting an 'occurrences expression', e.g. 'occurrences matches {n..m}'", ec_SOCCF)
			message_table.put ("Syntax error: expecting absolute path in use_node statement", ec_SUNPA)
			message_table.put ("Syntax error: expecting attribute definition(s)", ec_SCOAT)
			message_table.put ("Syntax error: error after 'use_archetype' keyword; expecting Object node definition", ec_SUAS)
			message_table.put ("Syntax error: expecting a 'any' node, 'leaf' node, or new node definition", ec_SCAS)
			message_table.put ("Syntax error: illegal invariant expression at identifier $1", ec_SINVS)
			message_table.put ("Syntax error: expecting absolute path after exists keyword", ec_SEXPT)
			message_table.put ("Syntax error: existence single value must be 0 or 1", ec_SEXLSG)
			message_table.put ("Syntax error: existence upper limit must be 0 or 1 when lower limit is 0", ec_SEXLU1)
			message_table.put ("Syntax error: existence upper limit must be 1 when lower limit is 1", ec_SEXLU2)
			message_table.put ("Syntax error: existence must be one of 0..0, 0..1, or 1..1", ec_SEXLMG)
			message_table.put ("Syntax error: invalid assumed value; must be an integer", ec_SCIAV)
			message_table.put ("Syntax error: invalid assumed value; must be a real number", ec_SCRAV)
			message_table.put ("Syntax error: invalid assumed value; must be an ISO8601 date", ec_SCDAV)
			message_table.put ("Syntax error: invalid assumed value; must be an ISO8601 time", ec_SCTAV)
			message_table.put ("Syntax error: invalid assumed value; must be an ISO8601 date/time", ec_SCDTAV)
			message_table.put ("Syntax error: invalid assumed value; must be an ISO8601 duration", ec_SCDUAV)
			message_table.put ("Syntax error: invalid assumed value; must be a string", ec_SCSAV)
			message_table.put ("Syntax error: invalid assumed value; must be a 'True' or 'False'", ec_SCBAV)
			message_table.put ("Syntax error: invalid assumed value; must be an ordinal integer value", ec_SCOAV)
			message_table.put ("Syntax error: invalid date constraint pattern '$1'; allowed patterns: $2", ec_SCDPT)
			message_table.put ("Syntax error: invalid time constraint pattern '$1'; allowed patterns: $2", ec_SCTPT)
			message_table.put ("Syntax error: invalid date/time constraint pattern '$1'; allowed patterns: $2", ec_SCDTPT)
			message_table.put ("Syntax error: invalid duration constraint pattern '$1'; legal pattern: P[Y|y][M|m][W|w][D|d][T[H|h][M|m][S|s]] or P[W|w] [/duration_interval]", ec_SCDUPT)
			message_table.put ("Syntax error: regular expression compile error '$1' is not a valid regular expression", ec_SCSRE)
			message_table.put ("Syntax error: invalid term code reference: '$1'; code string must conform to regex at(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*", ec_STCVA)
			message_table.put ("Syntax error: invalid id code reference: '$1'; code string must conform to regex id(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*", ec_STCID)
			message_table.put ("Syntax error: invalid value set reference: '$1'; code string must conform to regex ac(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*", ec_STCVS)
			message_table.put ("Syntax error: invalid term code constraint pattern '$1': $2", ec_STCCP)
			message_table.put ("Syntax error: duplicate code $1 found in code list of terminology constraint at path $2", ec_STCDC)
			message_table.put ("Syntax error: invalid value set with terminology $1 at path $2: no codes supplied", ec_STVSI)
			message_table.put ("Syntax error: assumed value code $1 not found in code list of terminology constraint at path $2", ec_STCAC)
			message_table.put ("Syntax error: terminology not specified", ec_STCNT)
			message_table.put ("archetype id type $1 does not match type $2 in definition section", ec_VARDT)
			message_table.put ("specialisation depth of concept code $1 not consistent with specialisation depth of parent archetype $2", ec_VACSD)
			message_table.put ("specialisation depth of concept code $1 not consistent with specialisation depth 0 of archetype", ec_VACSDtop)
			message_table.put ("specialisation depth of concept code $1 not consistent with declaration of specialisation parent", ec_VACSDpar)
			message_table.put ("archetype definition has no id-code", ec_VACCD)
			message_table.put ("invalid adl_version $1; must be a valid 3-part numeric version identifier", ec_VARAV)
			message_table.put ("invalid rm_release $1; must be a valid 3-part numeric version identifier", ec_VARRV)
			message_table.put ("invalid root object node_id (concept code) $1; should follow regex pattern $2", ec_VARCN)
			message_table.put ("value-set id code $1 referenced in definition at path $2 not defined in terminology", ec_VACDF)
			message_table.put ("at-code $1 used in constraint not defined in flat terminology", ec_VATDC)
			message_table.put ("External code $1 not found in terminology $2", ec_VETDF)
			message_table.put ("External term $1 not verified; terminology $2 unavailable", ec_WETDF)
			message_table.put ("translations for $1 defined in the description / translations section but missing in the term_definition section", ec_VOTM)
			message_table.put ("original language $1 not defined in terminology", ec_VOLT)
			message_table.put ("code $1 specialisation depth greater than that of archetype $2", ec_VATCD)
			message_table.put ("assumed value code $1 not included in value set $2 of constraint at path $3", ec_VATDA)
			message_table.put ("node id-code $1 at path $2 not defined in flat terminology", ec_VATID)
			message_table.put ("value code $1 referenced in definition at path $2 not defined in flat terminology", ec_VATDF)
			message_table.put ("specialised archetype id not based on specialisation parent archetype id", ec_VASID)
			message_table.put ("specialised archetype languages ($1) invalid - should be same as or a subset of those in flat parent ($2)", ec_VALC)
			message_table.put ("Inheritance loop detected: supplier $1 inherits current archetype", ec_VINH)
			message_table.put ("Supplier loop detected: $1 has itself as supplier at path $2", ec_VSUP)
			message_table.put ("translations key '$1' does not match translation item language '$2'", ec_VTRLA)
			message_table.put ("resource detail key '$1' does not match resource detail item language '$2'", ec_VRDLA)
			message_table.put ("term binding key $1 must either be valid term code or valid path in flat archetype", ec_VTTBK)
			message_table.put ("term binding key $1 must be a valid value-set id code", ec_VTCBK)
			message_table.put ("Invalid id-code $1 found in terminology definitions; code format must follow regex $2", ec_VATCV)
			message_table.put ("Annotation at language $1 has invalid archetype path $2", ec_VRANP1)
			message_table.put ("Annotation at language $1 has invalid reference model path $2", ec_VRANP2)
			message_table.put ("attribute at path $1 existence $2 does not conform to parent $3 existence $4", ec_VSANCE)
			message_table.put ("attribute at path $1 cardinality $2 does not conform to parent $3 cardinality $4", ec_VSANCC)
			message_table.put ("differential path $1 should have corresponding node in flat parent at $2 but doesn't", ec_VDIFP1)
			message_table.put ("differential path $1 not legal with respect to RM", ec_VDIFP2)
			message_table.put ("differential path $1 does not exist at specialisation level of flat parent", ec_VDIFP3)
			message_table.put ("differential path $1 not allowed in non-specialised archetype", ec_VDIFV)
			message_table.put ("attribute at path $1 is single-valued but is defined as multiply-valued in flat parent", ec_VSAM1)
			message_table.put ("attribute at path $1 is multiply-valued but is defined as single-valued in flat parent", ec_VSAM2)
			message_table.put ("object with RM type $1 under attribute '$2' does not have a node identifier (id-code)", ec_VCOID)
			message_table.put ("cannot add $1 object with $2 to attribute '$3' because attribute already has child with same node id", ec_VCOSU)
			message_table.put ("cannot add $1 object with $2 to singly-valued attribute '$3' because object occurrences > 1", ec_VACSO)
			message_table.put ("cannot add $1 object with $2 to multiply-valued attribute '$3' because occurrences upper bound $4 is greater than cardinality upper bound $5", ec_VACMCU)
			message_table.put ("for multiply-valued attribute '$1' sum of occurrences lower bounds $2 must be less than cardinality upper limit $3", ec_WACMCL)
			message_table.put ("for multiply-valued attribute '$1', minimum object count $2 must be less than cardinality upper limit $3 (it must be possible for at least one instance of one optional child object and one instance of every mandatory child object to contained in cardinality)", ec_VACMCO)
			message_table.put ("invalid object node_id $1; should follow regex pattern $2", ec_VARND)
			message_table.put ("node at path $1 has order marker referring to non-existant sibling node $2", ec_VSSM)
			message_table.put ("$1 object node at path $2 node identifier does not conform to $3 node at parent path $4", ec_VSONI)
			message_table.put ("$1 object node at path $2 has node identifier but C_ATTRIBUTE at $3 in flat parent has non-identified object nodes", ec_VSONIF)
			message_table.put ("object node identifier $1 (RM type $2) at path $3 should have corresponding node in flat parent at $4 but doesn't", ec_VSONIN)
			message_table.put ("object node at path $1 occurrences $2 redefines parent node occurrences $3 but node_id $4 not redefined", ec_VSONIRocc)
			message_table.put ("object node at path $1 RM type $2 redefines parent node RM type $3 but node_id $4 not redefined", ec_VSONIRrm)
			message_table.put ("illegal redefinition of $1 node at $2 in parent into $3 node at $4 in child", ec_VSCNR)
			message_table.put ("object node of RM type $1 at path $2 definition missing (empty definition only allowed when occurrences redefined in specialised child)", ec_VCOCDocc)
			message_table.put ("object node at path $1, RM type $2, has no node identifier", ec_VSONID)
			message_table.put ("$1 object node at path $2 (AOM type $3) does not conform to $4 node at parent path $5 (AOM type $6)", ec_VSONT)
			message_table.put ("object node at path $1 (RM type $2) does not conform to node at parent path $3 RM type $4", ec_VSONCT)
			message_table.put ("object node at path $1 occurrences $2 does not conform to node at parent path $3 occurrences $4", ec_VSONCO)
			message_table.put ("object node at path $1 in specialisation group whose collective occurrences $2 does not conform to node at parent path $3 occurrences $4", ec_VSONCOm)
			message_table.put ("object node at path $1 prohibited occurrences (i.e. {0}) not allowed on a node that does not redefine a node in the flat parent", ec_VSONPO)
			message_table.put ("object node at path $1 prohibited occurrences (i.e. {0}) not allowed on a node with AOM type $2 that redefines node in the flat parent of different AOM type $3", ec_VSONPT)
			message_table.put ("object node at path $1 with prohibited occurrences (i.e. {0}) must have identical id-code $2 to node being redefined", ec_VSONPI)
			message_table.put ("object node at path $1 node_id $2 does not conform to node at parent path $3 node_id $4", ec_VSONCI)
			message_table.put ("cADL object duplicate attribute '$1'", ec_VCATU)
			message_table.put ("$1 object node at path $2 does not conform to $3 node at parent path $4", ec_VSDTV)
			message_table.put ("$1 object node at path $2 does not conform to $3 node at parent path $4 (unknown reason)", ec_VUNK)
			message_table.put ("Conversion of C_DOMAIN_TYPE descendant $1 failed", ec_VDTCV)
			message_table.put ("C_DOMAIN_TYPE descendant type $1 unknown or not visible in type system", ec_VDTTU)
			message_table.put ("C_DOMAIN_TYPE descendant type does not include type", ec_VDTNT)
			message_table.put ("C_DV_ORDINAL assumed value not supported", ec_WDTOAV)
			message_table.put ("C_COMPLEX_OBJECT_PROXY path $1 not found in archetype", ec_VUNP)
			message_table.put ("node at path $1 AOM type $2 does not conform to node at parent path $3 AOM type $4", ec_VSUNT)
			message_table.put ("'exclude' constraint of slot of RM type $1 at path $2 invalid; exclude must be either empty or not match 'any' when 'include' matches 'any'", ec_VDSEV1)
			message_table.put ("'exclude' constraint of slot of RM type $1 at path $2 invalid; exclude must be either empty or match 'any' when 'include' matches non-'any'", ec_VDSEV2)
			message_table.put ("'include' constraint of slot of RM type $1 at path $2 invalid; include must be either empty or not match 'any' when 'exclude' matches 'any'", ec_VDSIV1)
			message_table.put ("'include' constraint of slot of RM type $1 at path $2 invalid; include must be either empty or match 'any' when 'exclude' matches non-'any'", ec_VDSIV2)
			message_table.put ("slot node with node id $1 at $2 redefining slot node (id = $3) must have identical node id", ec_VDSSID)
			message_table.put ("slot filler at $1 specifies archetype $2 that matches slot but doesn't exist in current repository, or has non-existent ancestor", ec_VARXR)
			message_table.put ("external reference at $1 specifies archetype $2 that doesn't exist in current repository", ec_VARXRA)
			message_table.put ("external reference at $1 specifies archetype $2 that is not a descendant of archetype $3 mentioned in matching parent node", ec_VARXAV)
			message_table.put ("slot filler at $1 specifies archetype id $2 that does not conform to flat parent slot constraint", ec_VARXS)
			message_table.put ("node id $1 of slot filler at $2 does not correspond to any ARCHETYPE slot in flat parent", ec_VARXNC)
			message_table.put ("node id $1 of slot filler at $2 must be specialisation of corresponding ARCHETYPE slot node id $3 in flat parent", ec_VARXID)
			message_table.put ("external reference at $1 has RM type $2 that does not conform to RM type $3 of slot or attribute in flat parent", ec_VARXTV)
			message_table.put ("slot filler at $1 does not have matching slot node in flat parent", ec_VARXV)
			message_table.put ("term code $1 invalid; must either be an archetype local term or a qualified external term", ec_VVST)
			message_table.put ("$1 object node at path $2 leaf value redefinition $3 does not conform to $4 in $5 node at parent path $6", ec_VPOV)
			message_table.put ("$1 object node at path $2 has tuple constraint $3 that includes non-tuple constrained attribute '$4' in parent at path $5", ec_VTPIN)
			message_table.put ("$1 object node at path $2 tuple constraint $3 does not conform to counterpart at path $4 in parent", ec_VTPNC)
			message_table.put ("code $1 in terminology has different specialisation level than archetype", ec_VTSD)
			message_table.put ("code $1 in terminology not present in language $2", ec_VTLC)
			message_table.put ("expecting URI e.g. <xxx:some.domain/x/y/z?query#fragment> at path $1", ec_VTCBU)
			message_table.put ("expecting TERMINOLOGY_CODE, e.g. [terminology_id::code]", ec_VTTBC)
			message_table.put ("expecting primitive object node at path $1", ec_VTG)
			message_table.put ("Path $1 in rule not matched by any path in archetype", ec_VRRLPAR)
			message_table.put ("Path $1 matched by archetype but tail extension $2 not found in RM for type $3", ec_VRRLPRM)
			message_table.put ("original_language section missing", ec_VDEOL)
			message_table.put ("type name '$1' at object node at $2 not known in reference model", ec_VCORM)
			message_table.put ("type '$1' of object node at $2 not does not conform to type '$3' of $4.$5 in reference model", ec_VCORMT)
			message_table.put ("attribute name '$1' in object node at $2 (type=$3) not among flat set of properties in reference model", ec_VCARM)
			message_table.put ("attribute '$1' in object node at $2 existence $3 does not conform to existence $4 in reference model", ec_VCAEX)
			message_table.put ("attribute '$1' in object node at $2 cardinality $3 does not conform to cardinality $4 in reference model", ec_VCACA)
			message_table.put ("attribute '$1' in object node at $2 cardinality $3 same as in reference model", ec_WCACA)
			message_table.put ("single-valued attribute at path $1 cardinality does not conform to cardinality $2 of container attribute in reference model", ec_VCAMs)
			message_table.put ("container attribute at path $1 with cardinality $2 does not conform to attribute in reference model, which is single-valued", ec_VCAMm)
			message_table.put ("attribute '$1' in object node at $2 existence $3 same as in reference model", ec_WCAEX)
			message_table.put ("attribute name '$1' in object node at $2 (type=$3) is a computed property in reference model", ec_WCARMC)
			message_table.put ("type '$1' of object node at $2 not does not conform to type $3 of $4.$5 in reference model but substitution allowed", ec_ICORMTS)
			message_table.put ("type '$1' of object node at $2 conformance to enumeration type $3 of $4.$5 in reference model inferred", ec_ICORMEN)
			message_table.put ("type '$1' of object node at $2 does not conform to enumeration type $3 of $4.$5", ec_VCORMEN)
			message_table.put ("type '$1' of object node at $2 conformance to enumeration type $3 of $4.$5 in reference model possible, but value $6 not in enumeration", ec_VCORMENV)
			message_table.put ("type '$1' of object node at $2 and enumeration type $3 of $4.$5 not supported", ec_VCORMENU)
			message_table.put ("ADL 1.4 archetype - attribute '$1' in object node at path $2: existence $3 does not conform to existence $4 in reference model", ec_WCAEX14)
			message_table.put ("ADL 1.4 archetype - attribute '$1' in object node at path $2: cardinality $3 does not conform to cardinality $4 in reference model", ec_WCACA14)
			message_table.put ("code $1 in terminology not used in archetype definition", ec_WOUC)
			message_table.put ("value set identifier code $1 referenced in value-sets section not defined in terminology", ec_VTVSID)
			message_table.put ("value set member code $1 referenced in value-sets section not defined in flat terminology", ec_VTVSMD)
			message_table.put ("value set member code $1 not unique in value set with id $2", ec_VTVSUQ)
			message_table.put ("template $1 overlay $2 has no valid parent and can't be added to library", ec_VTPIOV)
			message_table.put ("template $1 filler $2 does not contain language $3 and cannot be included.", ec_VTPL)
			message_table.put ("AOM profile file $1 does not exist or not readable", ec_aom_profile_file_not_valid)
			message_table.put ("AOM profile file $1 load failure; reason: $2", ec_aom_profile_load_failure)
			message_table.put ("AOM profile file $1 load failure due to exception during processing", ec_aom_profile_load_failure_exception)
			message_table.put ("AOM profile $1 load data conversion failure; reason: $2", ec_aom_profile_conv_fail_err)
			message_table.put ("Duplicate AOM profile found '$1' in file $2, ignoring latter", ec_aom_profile_duplicate_found)
			message_table.put ("AOM profile directory $1 does not exist or not readable", ec_aom_profile_dir_not_valid)
			message_table.put ("AOM profile directory $1 does not contain any profiles", ec_aom_profile_dir_contains_no_profiles)
			message_table.put ("AOM profile directory $1 does not contain any valid profiles", ec_aom_profile_dir_contains_no_valid_profiles)
			message_table.put ("Unknown exception processing AOM profiles", ec_aom_profile_unknown_exception)
			message_table.put ("AOM profile $1 has no 'profile_name' setting", ec_ARP_no_profile_name)
			message_table.put ("No BMM schema ids matching regexes found in 'rm_schema_patterns' setting of AOM profile  $1", ec_ARP_no_matching_schemas)
			message_table.put ("BMM schemas need to be loaded prior to AOM profiles", ec_ARP_no_bmm_schemas_loaded)
			message_table.put ("AOM built-in class '$1' is mapped to class '$2' that does not exist in schema $3", ec_ARP_invalid_class_mapping)
			message_table.put ("AOM built-in class '$1' property '$2' is mapped to class '$3' property '$4' that does not exist in schema $5", ec_ARP_invalid_property_mapping)
			message_table.put ("RM lifecycle state '$1' mapped to non-existent AOM state '$2' in Archetype profile $3", ec_ARP_invalid_lifecycle_state_mapping)
			message_table.put ("Config file path: $1", ec_cfg_file_path_info)
			message_table.put ("Repositories available:", ec_repos_found_info)
			message_table.put ("Populating library $1 ...", ec_rep_populate_progress_info)
			message_table.put ("Doing complete build on current library", ec_rep_populate_build_info)
			message_table.put ("No repository specified in .cfg file", ec_repos_not_found_info)
			message_table.put ("No libraries found in available repositories", ec_libs_not_found_info)
			message_table.put ("Archetype id $1 not found in repository $2", ec_archetype_not_found)
			message_table.put ("Archetype $1 differential desc in-memory form not found in repository $2", ec_archetype_in_memory_not_found)
			message_table.put ("Archetype $1 node $2 not found in repository $3", ec_archetype_node_not_found)
			message_table.put ("Exiting....APP_ROOT initialisation completed with errors", ec_app_exit_with_errors)
			message_table.put ("suppress verbose feedback, including configuration information on startup", ec_adlc_quiet_switch_desc)
			message_table.put ("use flat form of archetype[s] for export", ec_flat_switch_desc)
			message_table.put ("include RM multiplicities when flattening", ec_rm_multiplicities_switch_desc)
			message_table.put ("export templates only", ec_templates_only_switch_desc)
			message_table.put ("show current configuration and defaults", ec_show_config_switch_desc)
			message_table.put ("generate list of archetypes in current library (use for further processing)", ec_list_archetypes_switch_desc)
			message_table.put ("generate list of archetypes in current library in user-friendly format", ec_display_archetypes_switch_desc)
			message_table.put ("generate list of reference models", ec_list_rms_switch_desc)
			message_table.put ("build system and generate report", ec_build_switch_desc)
			message_table.put ("export archetypes", ec_export_switch_desc)
			message_table.put ("generate reports", ec_report_switch_desc)
			message_table.put ("export archetype term bindings", ec_export_term_bindings_desc)
			message_table.put ("remove mis-matched archetype term bindings", ec_clean_term_bindings_desc)
			message_table.put ("generate OPTs copy script", ec_gen_opts_copy_script_desc)
			message_table.put ("display reference model in user-friendly format", ec_display_rm_switch_desc)
			message_table.put ("reference model name", ec_display_rm_switch_arg_desc)
			message_table.put ("export reference models in all available formats", ec_export_rms_switch_desc)
			message_table.put ("path of folder in which to save export files", ec_export_rms_switch_arg_desc)
			message_table.put ("output format for generated files", ec_format_switch_desc)
			message_table.put ("file format", ec_format_switch_arg_desc)
			message_table.put ("output directory", ec_output_dir_switch_desc)
			message_table.put ("output directory", ec_output_dir_switch_arg_desc)
			message_table.put ("input file", ec_input_file_switch_desc)
			message_table.put ("input file path", ec_input_file_switch_arg_desc)
			message_table.put ("terminology namespace", ec_term_bindings_switch_desc)
			message_table.put ("terminology namespace: loinc, snomed, s2, openehr, etc", ec_term_bindings_switch_arg_desc)
			message_table.put ("output default configuration file location", ec_cfg_switch_desc)
			message_table.put (".cfg file path", ec_cfg_switch_arg_desc)
			message_table.put ("library to use", ec_library_switch_desc)
			message_table.put ("library name", ec_library_switch_arg_desc)
			message_table.put ("target repo to write to", ec_opts_copy_target_repo_switch_desc)
			message_table.put ("repo name", ec_opts_copy_target_repo_switch_arg_desc)
			message_table.put ("id_pattern", ec_id_pattern_arg_name)
			message_table.put ("archetype id regex", ec_id_pattern_arg_description)
			message_table.put ("regex string", ec_id_pattern_arg_type)
			message_table.put ("User .cfg file location: $1%N", ec_config_file_location)
			message_table.put ("XML rules file location: $1%N", ec_xml_rules_file_location)
			message_table.put ("AOM profiles location: $1%N", ec_aom_profiles_location)
			message_table.put ("openEHR terminology file location: $1%N", ec_terminology_location)
			message_table.put ("Configured repositories: %N", ec_repos_info_text)
			message_table.put ("Current library: $1%N", ec_current_lib_info_text)
			message_table.put ("Loaded RM schemas (BMM files): %N", ec_rm_schemas_info_text)
			message_table.put ("No archetype ids matching pattern '$1' in library $2 (use -s to see current config)", ec_no_matching_ids_err)
			message_table.put ("No library with name '$1' (use -s to see all libraries)", ec_lib_does_not_exist_err)
			message_table.put ("Invalid serialisation format '$1'; valid formats: $2", ec_invalid_serialisation_format_err)
			message_table.put ("Invalid report format '$1'; valid formats: $2", ec_invalid_report_format_err)
			message_table.put ("Could not create output directory '$1'", ec_invalid_output_directory)
			message_table.put ("Output directory must be specified", ec_output_directory_required_err)
			message_table.put ("Input file must be specified", ec_input_file_required_err)
			message_table.put ("Terminology namespace must be specified", ec_terminology_namespace_required_err)
			message_table.put ("Could not read input file '$1'", ec_invalid_input_file)
			message_table.put ("Archetype $1 not validated (run with '-a validate' to see errors)", ec_archetype_not_valid)
			message_table.put ("No terminology with namespace '$1'", ec_terminology_does_not_exist_err)
			message_table.put ("--------- Injecting term bindings for $1 from $2 ---------", ec_term_bindings_start)
			message_table.put ("Replacing $1 binding $2 for $3 with $4 in archetype $5", ec_replace_term_binding)
			message_table.put ("--------- Injected $1 new bindings for $2 and replaced $3 in $4 archetypes; ignored $5 codes", ec_term_bindings_report)
			message_table.put ("------------ Archetypes in library '$1 --------------'%N", ec_archs_list_text)
			message_table.put ("-----------------------------------------------------%N", ec_archs_list_text_end)
			message_table.put ("External tool $1 not found on local system; repository operations limited to local access.%N(Recommendation on Windows: install Git for any platform from https://git-scm.com/)", ec_repository_tool_unavailable)
			message_table.put ("For missing external tools, see Help menu > External tools", ec_external_tools_help_text)
			message_table.put ("Source path $1 is not in source repo $2", ec_source_path_not_in_source_repo)
			message_table.put ("Not implemented in this release", ec_to_be_implemented)
			message_table.put ("Copying file $1 to $2, backing up original to $3", ec_copy_file_with_backup)
			message_table.put ("Display", ec_display_in_active_tab)
			message_table.put ("Retarget to this class", ec_retarget_to_this_class)
			message_table.put ("Display in new tab", ec_display_in_new_tab)
			message_table.put ("Display class", ec_display_class)
			message_table.put ("Show in RM explorer", ec_show_class_in_rm)
			message_table.put ("Edit source", ec_edit_source)
			message_table.put ("Show in file system", ec_show_in_explorer)
			message_table.put ("Edit", ec_edit)
			message_table.put ("Create new archetype", ec_create_new_archetype)
			message_table.put ("Create new child archetype", ec_create_new_child_archetype)
			message_table.put ("Create new template", ec_create_new_template)
			message_table.put ("Save as", ec_save_archetype_as)
			message_table.put ("Save schema as", ec_save_schema_as)
			message_table.put ("Save as $1", ec_save_archetype_as_type)
			message_table.put ("Export as", ec_export_archetype_as)
			message_table.put ("Export flat as", ec_export_flat_archetype_as)
			message_table.put ("Edit source schema", ec_edit_source_schema)
			message_table.put ("Expand packages", ec_expand_packages)
			message_table.put ("Export as XML...", ec_export_as_xml)
			message_table.put ("Export as JSON...", ec_export_as_json)
			message_table.put ("Export as ODIN...", ec_export_as_odin)
			message_table.put ("Export P_BMM Schema as XML...", ec_export_schema_as_xml)
			message_table.put ("Export P_BMM Schema as JSON...", ec_export_schema_as_json)
			message_table.put ("Export P_BMM Schema as ODIN...", ec_export_schema_as_odin)
			message_table.put ("Export BMM Model as XML...", ec_export_model_as_xml)
			message_table.put ("Export BMM Model as JSON...", ec_export_model_as_json)
			message_table.put ("Export BMM Model as ODIN...", ec_export_model_as_odin)
			message_table.put ("Export as XML", ec_export_xml)
			message_table.put ("Tree control", ec_tree_controls)
			message_table.put ("Status", ec_status)
			message_table.put ("XML rules file is out of date; copying new master to $1,%Nbacking up original to $2 (local modifications will need to be re-applied)", ec_xml_rules_file_update_msg)
			message_table.put ("Removing invalid configuration (error: $1)", ec_remove_library_cfg)
			message_table.put ("Library error: $1", ec_library_cfg_error)
			message_table.put ("Configuration $1 not known in library configurations", ec_invalid_library_cfg)
			message_table.put ("Reference Path $1 does not exist or not readable", ec_ref_library_not_found)
			message_table.put ("Work Path $1 does not exist or not readable", ec_work_library_not_found)
			message_table.put ("Work Path $1 is the same as or a child of the reference library $2", ec_work_library_not_valid)
			message_table.put ("Last configuration cannot be removed; use 'Edit' to reconfigure", ec_cant_remove_last_library_cfg)
			message_table.put ("New configuration name $1 already used", ec_duplicate_library_cfg)
			message_table.put ("Library configuration name must not be empty", ec_empty_library_cfg)
			message_table.put ("ADL Workbench Library Configuration", ec_library_dialog_title)
			message_table.put ("Libraries", ec_library_cfg_list_text)
			message_table.put ("Add New", ec_add_new_library_cfg_button_text)
			message_table.put ("Add a new library configuration", ec_add_new_library_cfg_button_tooltip)
			message_table.put ("Remove", ec_remove_library_cfg_button_text)
			message_table.put ("Remove selected library configuration", ec_remove_library_cfg_button_tooltip)
			message_table.put ("Edit", ec_edit_library_cfg_button_text)
			message_table.put ("Edit selected library configuration", ec_edit_library_cfg_button_tooltip)
			message_table.put ("Reference Path", ec_ref_library_text)
			message_table.put ("Work Path", ec_work_library_text)
			message_table.put ("Create a new ADL2 repository (creates repository definition file in selected directory)?", ec_repository_create_new_question_text)
			message_table.put ("VCS Refresh", ec_refresh_vcs_button_text)
			message_table.put ("Refresh repository statuses in this dialog from version control system", ec_refresh_vcs_button_tooltip)
			message_table.put ("New ADL2 repository", ec_repository_new_text)
			message_table.put ("Local path: ", ec_repository_dir_text)
			message_table.put ("Choose repository root directory. This can be the root of e.g. %Na Git or SVN repository, or a normal file system location,%Nunder which archetype library folders may be sparsely located.", ec_repository_dir_tooltip)
			message_table.put ("ADL 1.4 path: ", ec_repository_adl14_dir_text)
			message_table.put ("Optionally specify ADL 1.4 legacy repository root directory.", ec_repository_adl14_dir_tooltip)
			message_table.put ("Directory $1 either doesn't exist, or already configured as a repository", ec_repository_dir_invalid)
			message_table.put ("Directory $1 exists but is not an archetype repository (no $2 file found)", ec_repository_dir_not_repository)
			message_table.put ("Archetype repository exists at $1 but is not a version control checkout area", ec_repository_dir_not_checkout)
			message_table.put ("Can't clone repo at URL $1 to directory $2 because there is already a non-empty sub-directory $3", ec_repository_clone_dir_invalid)
			message_table.put ("Directory $1 contains a copy of repository at $2 (duplicate Git or SVN checkout?)", ec_repository_dir_contains_duplicate)
			message_table.put ("Directory $1 is either a parent or child path of an existing repository", ec_repository_dir_in_existing_path)
			message_table.put ("Repositories and contained libraries", ec_repository_dialog_title)
			message_table.put ("'Repositories' are physical locations containing one or more 'libraries', %Neach of which is a logical collection of archetypes.", ec_repository_dialog_header_label)
			message_table.put ("Status", ec_repository_grid_status_col_title)
			message_table.put ("VCS Branch", ec_repository_grid_vcs_branch_col_title)
			message_table.put ("VCS Status", ec_repository_grid_vcs_status_col_title)
			message_table.put ("Repository / Library", ec_repository_grid_display_name_col_title)
			message_table.put ("Description", ec_repository_grid_description_col_title)
			message_table.put ("Maintainer", ec_repository_grid_maintainer_col_title)
			message_table.put ("Validation", ec_repository_grid_validation_col_title)
			message_table.put ("Edit", ec_repository_grid_edit_col_title)
			message_table.put ("Add new library here", ec_repository_add_new_library_here)
			message_table.put ("Add new library...", ec_repository_add_new_library)
			message_table.put ("Pull and/or merge changes from remote", ec_repository_vcs_pull_menu_item)
			message_table.put ("Commit local changes...", ec_repository_vcs_commit_menu_item)
			message_table.put ("Push changes to remote", ec_repository_vcs_push_menu_item)
			message_table.put ("Fetch updates from remote into local index", ec_repository_vcs_fetch_menu_item)
			message_table.put ("SVN update", ec_repository_svn_update)
			message_table.put ("Remote URL: ", ec_repository_url_label)
			message_table.put ("Could not execute external command $1", ec_external_command_unknown_error)
			message_table.put ("Could not execute external command $1", ec_external_command_did_not_execute)
			message_table.put ("External command '$1' failed;%N reason: $2", ec_external_command_failed)
			message_table.put ("External command '$1' ran; output:%N $2", ec_external_command_succeeded)
			message_table.put ("Version control repository synchronisation status unknown", ec_vcs_status_unknown_tooltip)
			message_table.put ("Version control repository has local files to commit", ec_vcs_status_files_not_committed_tooltip)
			message_table.put ("Version control repository up to date with remote", ec_vcs_status_up_to_date_tooltip)
			message_table.put ("Version control repository pull from remote required to be up to date", ec_vcs_status_pull_required_tooltip)
			message_table.put ("Version control repository push to remote required to be up to date", ec_vcs_status_push_required_tooltip)
			message_table.put ("Version control repository synchronise operation required with remote", ec_vcs_status_sync_required_tooltip)
			message_table.put ("Version control repository status: diverged from remote", ec_vcs_status_diverged_tooltip)
			message_table.put ("Invalid library path $1; must be at or below repository root, and not below or above any other library root", ec_repository_invalid_library_path)
			message_table.put ("Installed", ec_repository_status_installed)
			message_table.put ("Install", ec_repository_status_install)
			message_table.put ("%N----%NRemote source:%N%TURL: $1%N%Tcustodian: $2", ec_archetype_library_grid_name_col_tooltip)
			message_table.put ("About to clone repository $1 from $2 in $3; proceed?", ec_repository_clone_dir_confirm_text)
			message_table.put ("Commit", ec_repository_commit_commit_col_title)
			message_table.put ("Revert", ec_repository_commit_revert_col_title)
			message_table.put ("Status", ec_repository_commit_status_col_title)
			message_table.put ("Files", ec_repository_commit_file_list_col_title)
			message_table.put ("Commit Message: ", ec_repository_commit_message_label)
			message_table.put ("Repository Commit", ec_repository_commit_dialog_title)
			message_table.put ("Commit local changes to repository $1.", ec_repository_commit_dialog_header_label)
			message_table.put ("Commit ...", ec_repository_commit_button_text)
			message_table.put ("Revert", ec_repository_commit_revert_button_text)
			message_table.put ("Forget local changes, and revert to file as last committed to repository, or remove in case of new file.", ec_repository_commit_revert_button_tooltip)
			message_table.put ("No commmit message supplied", ec_no_commit_message_supplied)
			message_table.put ("Stage error: $1", ec_repository_stage_failed)
			message_table.put ("Install ADL2 Repository", ec_repository_install_dialog_title)
			message_table.put ("ASSOCIATE: select repository already cloned on your file system OR%NCLONE: clone from the remote repository - choose PARENT directory%N   and tick the box.", ec_repository_install_dialog_header_label_url)
			message_table.put ("CREATE NEW LOCAL: select local directory%NASSOCIATE repo to remote: select repository already cloned on your file system OR%NCLONE: clone from the remote repository - choose PARENT directory%N   and tick the box.", ec_repository_install_dialog_header_label)
			message_table.put ("Clone remote repository; choose PARENT directory.", ec_repository_install_dialog_header_label_clone)
			message_table.put ("Create new clone & checkout below this directory", ec_repository_clone_here_text)
			message_table.put ("Check this box to create a new clone of the remote repository;%Nleave unchecked if you already have a local clone/checkout.", ec_repository_clone_here_tooltip)
			message_table.put ("Forget repository $1 in configuration (doesn't change anything on system)?", ec_repository_forget_confirm_text)
			message_table.put ("Forget...", ec_repository_forget_menu_text)
			message_table.put ("Repository Checkout", ec_repository_checkout_dialog_title)
			message_table.put ("Checkout Branch...", ec_repository_checkout_branch_menu_item)
			message_table.put ("Checkout new branch locally", ec_repository_checkout_branch_dialog_header_label)
			message_table.put ("Checkout: ", ec_repository_checkout_branch_combo_label)
			message_table.put ("Checkout a different branch from selection", ec_repository_checkout_branch_combo_tooltip)
			message_table.put ("Edit Library Configuration", ec_library_cfg_edit_dialog_title)
			message_table.put ("Archetype Name:", ec_library_cfg_name_text)
			message_table.put ("Reference Path:", ec_ref_library_dir_text)
			message_table.put ("     Work Path:", ec_work_library_dir_text)
			message_table.put ("ADL Workbench Options", ec_option_dialog_title)
			message_table.put ("Edit File", ec_option_dialog_edit_file_text)
			message_table.put ("Terminology directory:", ec_terminology_directory_text)
			message_table.put ("Export directory:", ec_export_directory_text)
			message_table.put ("Save test diff files to:", ec_test_diff_files_directory_text)
			message_table.put ("Text Editor:", ec_text_editor_directory_text)
			message_table.put ("ADL Editor:", ec_adl_editor_directory_text)
			message_table.put ("Diff Tool:", ec_diff_tool_directory_text)
			message_table.put ("Directory Paths", ec_path_settings_frame_text)
			message_table.put ("External Tool Paths", ec_tool_paths_frame_text)
			message_table.put ("ADL version for serialisation:", ec_adl_serialisation_level_text)
			message_table.put ("Which version of the ADL syntax to use when saving archetypes.", ec_adl_serialisation_level_tooltip)
			message_table.put ("Error Reporting Level:", ec_error_reporting_level_text)
			message_table.put ("Select the level of parser messages to display. All levels >= this level displayed.", ec_error_reporting_level_tooltip)
			message_table.put ("Quiet mode", ec_compiler_quiet_text)
			message_table.put ("Reduce compiler output to a minimum regardless of error-reporting level.", ec_compiler_quiet_tooltip)
			message_table.put ("RM flattening on", ec_rm_flattening_text)
			message_table.put ("Include RM attribute existence and cardinality in flattened archetypes.", ec_rm_flattening_tooltip)
			message_table.put ("Validation Strict", ec_validation_strict_text)
			message_table.put ("With 'strict' on, identical constraints in child archetypes are treated as errors.", ec_validation_strict_tooltip)
			message_table.put ("Show definition tree expanded", ec_show_definition_tree_expanded_text)
			message_table.put ("Show archetype definition tree fully expanded by default when viewing a new archetype", ec_show_definition_tree_expanded_tooltip)
			message_table.put ("Show line numbers in ADL source", ec_show_line_numbers)
			message_table.put ("Show flat form by default", ec_show_flat_form_text)
			message_table.put ("Show flat rather than differential form of archetype in all applicable tabs", ec_show_flat_form_tooltip)
			message_table.put ("Show original source format in explorer", ec_show_source_format_text)
			message_table.put ("Indicate original format  - ADL 1.4 legacy flat, ADL 1.5, etc", ec_show_source_format_tooltip)
			message_table.put ("Show all classes in explorer", ec_show_all_classes_text)
			message_table.put ("Show all archetypable classes in RM even if there are no archetypes based on them in the current library.", ec_show_all_classes_tooltip)
			message_table.put ("Use RM icons", ec_use_rm_icons_text)
			message_table.put ("Use RM-specific icons in visualisation of archetype definition?", ec_use_rm_icons_tooltip)
			message_table.put ("Default Tool Tab: ", ec_options_tool_tab_text)
			message_table.put ("Choose which tab is by default shown when opening an archetype", ec_options_tool_tab_tooltip)
			message_table.put ("Paths", ec_options_path_tab_text)
			message_table.put ("Compiler Settings", ec_options_compiler_settings_tab_text)
			message_table.put ("User Interface Settings", ec_options_ui_settings_tab_text)
			message_table.put ("Authoring", ec_options_authoring_tab_text)
			message_table.put ("Name: ", ec_options_auth_name_label)
			message_table.put ("Organisation: ", ec_options_auth_org_label)
			message_table.put ("Copyright: ", ec_options_auth_copyright_label)
			message_table.put ("Language (ISO 3166 2-char): ", ec_options_auth_language_label)
			message_table.put ("Namespaces", ec_options_namespaces_tab_text)
			message_table.put ("Namespace", ec_options_namespace_table_col_1_text)
			message_table.put ("URI", ec_options_namespace_table_col_2_text)
			message_table.put ("Terminology URIs", ec_options_terminology_uris_tab_text)
			message_table.put ("ADL Workbench AOM profile Configuration", ec_aom_profile_dialog_title)
			message_table.put ("Archetype Object Model (AOM) profiles loaded shown below.%NCheck or uncheck to load as required.", ec_aom_profile_dialog_header_label)
			message_table.put ("Directory $1 not found; please specify a valid directory", ec_aom_profile_dir_not_found)
			message_table.put ("AOM profile directory:", ec_aom_profile_dir_text)
			message_table.put ("Profile", ec_aom_profile_grid_profile_col_title)
			message_table.put ("Matched Reference Models", ec_aom_profile_grid_rm_col_title)
			message_table.put ("Terminologies", ec_aom_profile_grid_term_col_title)
			message_table.put ("RM Closures", ec_aom_profile_grid_closures_col_title)
			message_table.put ("Arch Parent Class", ec_aom_profile_grid_arch_parent_class_col_title)
			message_table.put ("DV Parent Class", ec_aom_profile_grid_dv_parent_class_col_title)
			message_table.put ("Validation", ec_aom_profile_grid_validated_col_title)
			message_table.put ("Edit", ec_aom_profile_grid_edit_col_title)
			message_table.put ("ADL Workbench RM Schema Configuration", ec_rm_schema_dialog_title)
			message_table.put ("Reference Model schemas loaded shown below.%NCheck or uncheck to load as required.", ec_rm_schema_dialog_header_label)
			message_table.put ("Directory $1 not found; please specify a valid directory", ec_rm_schema_dir_not_found)
			message_table.put ("RM schema directory:", ec_rm_schema_dir_text)
			message_table.put ("Schema", ec_rm_schema_grid_schema_col_title)
			message_table.put ("Lifecycle state", ec_rm_schema_grid_lifecycle_state_col_title)
			message_table.put ("Validated", ec_rm_schema_grid_validated_col_title)
			message_table.put ("Edit", ec_rm_schema_grid_edit_col_title)
			message_table.put ("XML Export", ec_rm_schema_grid_xml_schema_export_col_title)
			message_table.put ("Reload", ec_rm_schema_dialog_reload_button_text)
			message_table.put ("Create new archetype", ec_create_archetype_dialog_title)
			message_table.put ("Create in directory: ", ec_archetype_dir_label_text)
			message_table.put ("Archetype id: ", ec_archetype_id_label_text)
			message_table.put ("Parent id: ", ec_parent_archetype_id_label_text)
			message_table.put ("Archetype with id $1 already exists in library", ec_duplicate_archetype_id_err_msg)
			message_table.put ("Template overlay id $1 in template $2 already exists in template $3", ec_duplicate_template_overlay_id_err_msg)
			message_table.put ("Concept $1 contains invalid characters", ec_invalid_archetype_id_concept_err)
			message_table.put ("Configure object constraint", ec_initial_c_object_config_dialog_title)
			message_table.put ("Constraint type: ", ec_initial_c_object_config_constraint_type_text)
			message_table.put ("Choome AOM constraint type", ec_initial_c_object_config_constraint_type_tooltip)
			message_table.put ("RM type: ", ec_initial_c_object_config_rm_type_text)
			message_table.put ("Choose RM type of the new constraint object", ec_initial_c_object_config_rm_type_tooltip)
			message_table.put ("Occurrences: ", ec_initial_c_object_config_occurrences_text)
			message_table.put ("Limit occurrences of objects in data that conform to this constraint object", ec_initial_c_object_config_occurrences_tooltip)
			message_table.put ("Archetype ref: ", ec_initial_c_object_config_ext_ref_text)
			message_table.put ("Identifier of archetype to link to", ec_initial_c_object_config_ext_ref_tooltip)
			message_table.put ("Path ref: ", ec_initial_c_object_config_path_ref_text)
			message_table.put ("Path of node in this archetype to link to", ec_initial_c_object_config_path_ref_tooltip)
			message_table.put ("Text: ", ec_node_id_text)
			message_table.put ("Description: ", ec_node_id_description)
			message_table.put ("Require node id term definition?", ec_node_id_cb_text)
			message_table.put ("Check if term definition should be forced, even when it isn't required (due to node being single)", ec_node_id_cb_tooltip)
			message_table.put ("Complex object", ec_c_type_complex_object)
			message_table.put ("Primitive Object", ec_c_type_primitive_object)
			message_table.put ("External ref set", ec_c_type_external_constraint_reference)
			message_table.put ("Archetype reference", ec_c_type_archetype_reference)
			message_table.put ("Internal reference", ec_c_type_internal_reference)
			message_table.put ("Archteype slot", ec_c_type_slot)
			message_table.put ("Quantity", ec_c_type_quantity)
			message_table.put ("Ordinal", ec_c_type_ordinal)
			message_table.put ("Code phrase", ec_c_type_code_phrase)
			message_table.put ("Open target in new tab", ec_open_target_in_new_tab)
			message_table.put ("Prohibit", ec_c_attribute_prohibit)
			message_table.put ("Mandate", ec_c_attribute_mandate)
			message_table.put ("File", ec_menu_file_key)
			message_table.put ("File>Open", ec_menu_file_open_key)
			message_table.put ("File>Save As", ec_menu_file_save_as_key)
			message_table.put ("File>Export", ec_menu_file_export_key)
			message_table.put ("File>Export Flat", ec_menu_file_export_flat_key)
			message_table.put ("File>Exit", ec_menu_file_exit_key)
			message_table.put ("Edit", ec_menu_edit_key)
			message_table.put ("Edit>Copy", ec_menu_edit_copy_key)
			message_table.put ("Edit>Select All", ec_menu_edit_select_all_key)
			message_table.put ("Edit>Show Clipboard", ec_menu_edit_show_clipboard_key)
			message_table.put ("View", ec_menu_view_key)
			message_table.put ("View>Differential", ec_menu_view_differential_key)
			message_table.put ("View>Flat", ec_menu_view_flat_key)
			message_table.put ("View>New Archetype Tool", ec_menu_view_new_archetype_tool_key)
			message_table.put ("View>New Class Tool", ec_menu_view_new_class_tool_key)
			message_table.put ("View>Reset Layout", ec_menu_view_reset_layout_key)
			message_table.put ("AOM Profiles", ec_menu_aom_profiles_key)
			message_table.put ("AOM Profiles>Configure", ec_menu_aom_profiles_configure_key)
			message_table.put ("Archetypes", ec_menu_archetypes_key)
			message_table.put ("Archetypes>Build All", ec_menu_archetypes_build_all_key)
			message_table.put ("Archetypes>Rebuild All", ec_menu_archetypes_rebuild_all_key)
			message_table.put ("Archetypes>Export Library", ec_menu_archetypes_export_library_key)
			message_table.put ("Archetypes>Compilation Report", ec_menu_archetypes_report_key)
			message_table.put ("Archetypes>Reports", ec_menu_archetypes_reporting_key)
			message_table.put ("Archetypes>Interrupt Build", ec_menu_archetypes_interrupt_build_key)
			message_table.put ("Archetypes>Refresh", ec_menu_archetypes_refresh_key)
			message_table.put ("Archetypes>Configure", ec_menu_archetypes_configure_key)
			message_table.put ("RM Schemas", ec_menu_rm_schemas_key)
			message_table.put ("RM Schemas>Reload", ec_menu_rm_schemas_reload_key)
			message_table.put ("RM Schemas>Configure", ec_menu_rm_schemas_configure_key)
			message_table.put ("XML", ec_menu_xml_key)
			message_table.put ("XML>Edit Rules", ec_menu_xml_edit_rules_key)
			message_table.put ("Tools", ec_menu_tools_key)
			message_table.put ("Tools>Test Tool", ec_menu_tools_test_tool_key)
			message_table.put ("Tools>Clean Files", ec_menu_tools_clean_files_key)
			message_table.put ("Tools>ADL 2 Roundtrip", ec_menu_tools_adl_roundtrip_key)
			message_table.put ("Tools>Options", ec_menu_tools_options_key)
			message_table.put ("Help", ec_menu_help_key)
			message_table.put ("Help>Online Help", ec_menu_help_online_help_key)
			message_table.put ("Help>Release Notes", ec_menu_help_release_notes_key)
			message_table.put ("Help>External Tools", ec_menu_help_external_tools_key)
			message_table.put ("Help>CKM", ec_menu_help_ckm_key)
			message_table.put ("Help>Report Bug", ec_menu_help_report_bug_key)
			message_table.put ("Help>About", ec_menu_help_about_key)
			message_table.put ("&File", ec_file_menu_text)
			message_table.put ("&Open...", ec_file_menu_open_text)
			message_table.put ("&Save As...", ec_file_menu_save_as_text)
			message_table.put ("&Export As...", ec_file_menu_export_text)
			message_table.put ("Export F&lat As...", ec_file_menu_export_flat_as_text)
			message_table.put ("&Edit", ec_edit_menu_text)
			message_table.put ("&Copy", ec_edit_menu_copy_text)
			message_table.put ("Select &All", ec_edit_menu_select_all_text)
			message_table.put ("Clip&board...", ec_edit_menu_clipboard_text)
			message_table.put ("&View", ec_view_menu_text)
			message_table.put ("&Differential", ec_view_menu_differential_text)
			message_table.put ("&Flat", ec_view_menu_flat_text)
			message_table.put ("New Archetype &Tab", ec_view_menu_new_arch_tab_text)
			message_table.put ("New &Class Tab", ec_view_menu_new_class_tab_text)
			message_table.put ("&Reset tool layout", ec_view_menu_reset_layout_text)
			message_table.put ("H&istory", ec_history_menu_text)
			message_table.put ("&Back", ec_history_menu_back_text)
			message_table.put ("&Forward", ec_history_menu_forward_text)
			message_table.put ("AOM &Profiles", ec_aom_profiles_menu_text)
			message_table.put ("&Configure", ec_aom_profiles_menu_configure_text)
			message_table.put ("&Archetypes", ec_archetypes_menu_text)
			message_table.put ("&Build All", ec_archetypes_menu_build_all_text)
			message_table.put ("Rebuild &All", ec_archetypes_menu_rebuild_all_text)
			message_table.put ("&Interrupt Build", ec_archetypes_menu_interrupt_text)
			message_table.put ("Re&fresh Library", ec_archetypes_menu_refresh_text)
			message_table.put ("Export &Library ...", ec_archetypes_menu_export_library_text)
			message_table.put ("Export Compilation &Report...", ec_archetypes_menu_export_report_text)
			message_table.put ("Reports...", ec_archetypes_menu_reporting_text)
			message_table.put ("&Configure Repositories...", ec_archetypes_menu_configure_text)
			message_table.put ("&RM Schemas", ec_rm_schemas_menu_text)
			message_table.put ("&Reload Schemas", ec_rm_schemas_reload_text)
			message_table.put ("&Configure Schemas", ec_rm_schemas_configure_text)
			message_table.put ("&XML", ec_xml_menu_text)
			message_table.put ("&Edit Rules", ec_xml_menu_edit_rules_text)
			message_table.put ("&Tools", ec_tools_menu_text)
			message_table.put ("&Clean Generated Files", ec_tools_menu_clean_text)
			message_table.put ("&ADL 2 Round Trip", ec_tools_menu_adl_roundtrip_text)
			message_table.put ("&Options", ec_tools_menu_options_text)
			message_table.put ("&Help", ec_help_menu_text)
			message_table.put ("&Online Help", ec_help_menu_online_text)
			message_table.put ("&Release Notes", ec_help_menu_release_notes_text)
			message_table.put ("Clinical &Knowledge Manager", ec_help_menu_ckm_text)
			message_table.put ("&External Tools Help", ec_help_menu_external_tools_text)
			message_table.put ("Report a &Bug", ec_help_menu_report_bug_text)
			message_table.put ("&About AWB", ec_help_menu_about_text)
			message_table.put ("Back one item", ec_history_button_back_one_item_text)
			message_table.put ("Forward one item", ec_history_button_forward_one_item_text)
			message_table.put ("Archetype Definition Language $1 Workbench", ec_main_window_title)
			message_table.put ("Export Compilation Report", ec_export_report_dialog_title)
			message_table.put ("Export BMM Schema", ec_export_bmm_schema_dialog_title)
			message_table.put ("About ADL Workbench", ec_about_awb_dialog_title)
			message_table.put ("Reference Models", ec_reference_models_docking_area_title)
			message_table.put ("Errors", ec_error_tool_title)
			message_table.put ("Console", ec_console_tool_title)
			message_table.put ("Test tool", ec_test_tool_title)
			message_table.put ("Select archetype library", ec_library_cfg_combo_tooltip)
			message_table.put ("Compile", ec_compile_button_text)
			message_table.put ("Compile all archetypes (F7)", ec_compile_button_tooltip)
			message_table.put ("ADL Version:", ec_adl_version_label_text)
			message_table.put ("ADL/AOM version in which archetype was authored", ec_adl_version_label_tooltip)
			message_table.put ("Configuration warning", ec_config_dialog_warning)
			message_table.put ("Export Library", ec_export_library_dialog_title)
			message_table.put ("Compile system (F7) and display statistics before generating error report", ec_export_errors_stats_requires_build_text)
			message_table.put ("System needs to be compiled before generated files can be deleted", ec_clean_generated_files_info)
			message_table.put ("Exported report to $1", ec_export_library_report_replace_info)
			message_table.put ("Failed to export report to $1", ec_export_library_report_replace_err)
			message_table.put ("Only successfully built archetypes can be exported to $1.%N%NDo you want to build each archetype before exporting it?", ec_export_question)
			message_table.put ("Export archetypes in a specific format to the file system", ec_export_description)
			message_table.put ("Generate reports on archetypes and save in a specific format", ec_report_description)
			message_table.put ("Edit which file?%N%NDifferential: $1%N%NFlat (legacy): $2", ec_edit_which_file_question)
			message_table.put ("The Differential (.adls) file is not available.%N%NOpening the legacy flat file: $1%N", ec_edit_legacy_file_info)
			message_table.put ("Yes, Build and Export All", ec_build_and_export_all)
			message_table.put ("No, Export only the built ones", ec_export_only_built)
			message_table.put ("Export library in $1 format", ec_export_in_format_dialog_title)
			message_table.put ("Must compile before serialising", ec_compile_before_serialising)
			message_table.put ("Compile all archetypes first?", ec_export_compile_first_text)
			message_table.put ("Select to force full compile before export; otherwise, %Nonly currently compiled archetypes will be exported", ec_export_compile_first_tooltip)
			message_table.put ("Output format: ", ec_output_format_text)
			message_table.put ("Select output format", ec_output_format_tooltip)
			message_table.put ("Export directory: ", ec_export_directory)
			message_table.put ("Differential", ec_export_differential_text)
			message_table.put ("Flat", ec_export_flat_text)
			message_table.put ("Export", ec_export_button_text)
			message_table.put ("Run", ec_run_report_button_text)
			message_table.put ("Input Settings", ec_export_input_settings)
			message_table.put ("Output Settings", ec_export_output_settings)
			message_table.put ("No diff tool must be configured; see Options", ec_no_diff_tool)
			message_table.put ("No diff directories available; tests must be run on library first", ec_no_diff_dirs)
			message_table.put ("Populating from directories in $1 library configuration...", ec_populating_directory_start)
			message_table.put ("...complete; compile with F7 or other options under Library menu", ec_populating_directory_complete)
			message_table.put (" **** No flat (.adlf) text available ", ec_compiler_no_flat_text)
			message_table.put (" **** No source (.adls) text available ", ec_compiler_no_source_text)
			message_table.put (" **** No ODIN (.odin) text available ", ec_compiler_no_dadl_text)
			message_table.put ("Read from docking config file $1 failed", ec_read_docking_file_failed)
			message_table.put ("Write to docking config file $1 failed", ec_write_docking_file_failed)
			message_table.put ("Copying user docking config file $1 to default location $2", ec_copy_docking_file)
			message_table.put ("No docking format file fund at user location $1 or default location $2", ec_no_docking_file_found)
			message_table.put ("Configuration warning", ec_config_warning_text)
			message_table.put ("XML based on ADL 1.4 available in next release", ec_xml_14_not_available_message)
			message_table.put ("No archetype selected", ec_no_archetype_selected)
			message_table.put ("ADL 1.4 files", ec_adl_14_files)
			message_table.put ("ADL 2 source files", ec_adl_2_source_files)
			message_table.put ("No archetypes found; may need to enable appropriate RM schema; see RM Schemas > Configure menu", ec_library_no_archetypes_found)
			message_table.put ("Edit $1", ec_library_edit_dialog_title)
			message_table.put ("Differential", ec_library_edit_differential_button_text)
			message_table.put ("Original source (ADL 1.4)", ec_library_edit_adl14_button_text)
			message_table.put ("Archetypes", ec_library_archetype_tab_text)
			message_table.put ("Templates", ec_library_template_tab_text)
			message_table.put ("Metrics", ec_library_metrics_tab_text)
			message_table.put ("Statistics", ec_library_stats_tab_text)
			message_table.put ("Library", ec_library_tool_title)
			message_table.put ("Save Archetype", ec_save_archetype_title)
			message_table.put ("Export Archetype", ec_export_archetype_title)
			message_table.put ("Cycle through available views of artefacts", ec_library_mini_toolbar_view_rotate)
			message_table.put ("View all RM classes", ec_library_mini_toolbar_view_all_classes)
			message_table.put ("Error adding archetype to library: $1", ec_library_add_new_archetype_error)
			message_table.put ("Remove artefact confirmation", ec_remove_dialog_title)
			message_table.put ("Remove $1? WARNING: really removes from the file system!", ec_remove_artefact_question)
			message_table.put ("Remove from system", ec_remove_artefact)
			message_table.put ("Progress: ", ec_library_compile_status_text)
			message_table.put ("Include code meanings in paths", ec_nat_lang_paths_tooltip)
			message_table.put ("Natural lang", ec_nat_lang_checkbox_text)
			message_table.put ("ADL 2 paths", ec_adl_2_paths_tab_text)
			message_table.put ("ADL 1.4 paths", ec_adl_14_paths_tab_text)
			message_table.put ("Interface tags", ec_adl_interface_tab_text)
			message_table.put ("this list may be incomplete. To be sure, run Build All under the Archetype menu.", ec_slots_incomplete_w1)
			message_table.put ("Slot fillers for current Archetype", ec_slot_fillers_frame_text)
			message_table.put ("Archetypes containing slots fillable by current Archetype", ec_slot_owners_frame_text)
			message_table.put ("Supplier Archetypes", ec_suppliers_frame_text)
			message_table.put ("Client Archetypes", ec_clients_frame_text)
			message_table.put ("Archetype References", ec_archetype_references_text)
			message_table.put ("Path", ec_annotation_path_text)
			message_table.put ("Annotation key", ec_annotation_key_text)
			message_table.put ("Annotation value", ec_annotation_value_text)
			message_table.put ("(REMOVED)", ec_attribute_removed_text)
			message_table.put ("(REMOVED)", ec_occurrences_removed_text)
			message_table.put ("Annotations", ec_annotations_text)
			message_table.put ("Inheritance status: ", ec_inheritance_status_text)
			message_table.put ("RM name", ec_definition_grid_col_rm_name_text)
			message_table.put ("Meaning", ec_definition_grid_col_meaning_text)
			message_table.put ("Constraint", ec_definition_grid_col_constraint_text)
			message_table.put ("Existence", ec_definition_grid_col_existence_text)
			message_table.put ("Card/Occ", ec_definition_grid_col_card_occ_text)
			message_table.put ("Order", ec_definition_grid_col_sibling_order_text)
			message_table.put ("LOINC", ec_definition_grid_col_loinc_text)
			message_table.put ("Expression tree", ec_rules_grid_col_expr_type_text)
			message_table.put ("Expression value", ec_rules_grid_col_expr_value_text)
			message_table.put ("Assumed", ec_assumed_text)
			message_table.put ("Detail Level", ec_view_detail_controls_text)
			message_table.put ("Domain", ec_domain_detail_button_text)
			message_table.put ("Show domain view (hide RM details of the archetyped nodes)", ec_domain_detail_button_tooltip)
			message_table.put ("Technical", ec_technical_detail_button_text)
			message_table.put ("Show technical view including RM classes & properties", ec_technical_detail_button_tooltip)
			message_table.put ("Add Codes", ec_domain_view_add_codes_text)
			message_table.put ("RM Visibility", ec_rm_visibility_controls_text)
			message_table.put ("Multiplicities", ec_show_rm_multiplicities_button_text)
			message_table.put ("Show archetypable RM multiplicities", ec_show_rm_multiplicities_tooltip)
			message_table.put ("Data Properties", ec_show_rm_properties_button_text)
			message_table.put ("Show archetypable RM data properties", ec_show_rm_properties_tooltip)
			message_table.put ("Runtime Properties", ec_show_rm_runtime_properties_button_text)
			message_table.put ("Show RM runtime-set properties", ec_show_rm_runtime_properties_tooltip)
			message_table.put ("I/S Properties", ec_show_rm_if_properties_button_text)
			message_table.put ("Show RM infrastructure (non-content) properties", ec_show_rm_if_properties_tooltip)
			message_table.put ("Rendering", ec_rendering_controls_text)
			message_table.put ("Inheritance", ec_show_rm_inh_button_text)
			message_table.put ("Show inheritance status: inherited, redefined or added here", ec_show_rm_inh_button_tooltip)
			message_table.put ("Hide excluded", ec_hide_excl_attrs_button_text)
			message_table.put ("Hide excluded attributes, i.e. with existence matches {0}", ec_hide_excl_attrs_button_tooltip)
			message_table.put ("Closure depth", ec_rm_closure_depth_control_frame_text)
			message_table.put ("Depth of closure to explore; this computation can be long for depths > 5", ec_closure_depth_spin_button_tooltip)
			message_table.put ("Refresh", ec_closure_depth_recompute_button_text)
			message_table.put ("Recompute with new depth", ec_closure_depth_recompute_button_tooltip)
			message_table.put ("Collapse All", ec_expand_button_collapse_text)
			message_table.put ("Expand All", ec_expand_button_expand_text)
			message_table.put ("Display code in terminology", ec_menu_option_display_code)
			message_table.put ("Convert to constraint ...", ec_object_context_menu_convert)
			message_table.put ("Display path in path map", ec_object_context_menu_display_path)
			message_table.put ("Copy path to clipboard", ec_object_context_menu_copy_path)
			message_table.put ("Delete node", ec_object_context_menu_delete)
			message_table.put ("Refine constraint", ec_object_context_menu_refine)
			message_table.put ("New archetype based on this sub-tree", ec_object_context_menu_new_archetype)
			message_table.put ("Add new child node", ec_attribute_context_menu_add_child)
			message_table.put ("[includes]", ec_include_text)
			message_table.put ("[excludes]", ec_exclude_text)
			message_table.put ("Required", ec_slot_match_required_text)
			message_table.put ("Recommended", ec_slot_match_recommended_text)
			message_table.put ("Slot-fillers (preferred)", ec_archetype_slot_node_submenu_preferred_text)
			message_table.put ("Slot-fillers (mandated)", ec_archetype_slot_node_submenu_exact_text)
			message_table.put ("Term bindings to path:", ec_path_term_bindings_tooltip_text)
			message_table.put ("Term bindings to node id:", ec_node_term_bindings_tooltip_text)
			message_table.put ("Archetype source lengths same but texts differ", ec_Test_arch_compare_i1)
			message_table.put ("Archetype source lengths differ: original =  $1; new = $2", ec_Test_arch_compare_i2)
			message_table.put ("Remove unused codes", ec_Test_remove_unused_codes_button_text)
			message_table.put ("Remove unused codes in archetypes on parse", ec_Test_remove_unused_codes_button_tooltip)
			message_table.put ("Refresh", ec_Test_refresh_button_text)
			message_table.put ("Resync to file system and reset statuses", ec_Test_refresh_button_tooltip)
			message_table.put ("Regression", ec_Test_regression_checkbox_text)
			message_table.put ("Turn regression testing on for test archetypes", ec_Test_regression_checkbox_tooltip)
			message_table.put ("Processed: ", ec_Test_processed_indicator_text)
			message_table.put ("Compile", ec_Test_start_stop_button_text)
			message_table.put ("Execute tests", ec_Test_start_stop_button_tooltip)
			message_table.put ("Close", ec_Test_close_tool_button_text)
			message_table.put ("Close test tool", ec_Test_close_tool_button_tooltip)
			message_table.put ("Source file v Serialised", ec_Test_source_serialised_button_text)
			message_table.put ("Open diff tool on parsed and 1st generation serialised .adls files", ec_Test_source_serialised_button_tooltip)
			message_table.put ("Legacy v gen'd Flat", ec_Test_diff_flat_button_text)
			message_table.put ("Open diff tool on legacy and generated flat files", ec_Test_diff_flat_button_tooltip)
			message_table.put ("Source v gen'd Flat", ec_Test_source_gen_flat_button_text)
			message_table.put ("Open diff tool on source and generated flat files; for top-level archetypes, this shows the effect of flattening the RM, if that option is turned on.", ec_Test_source_gen_flat_button_tooltip)
			message_table.put ("Source v R-trip", ec_Test_source_roundtrip_button_text)
			message_table.put ("Open diff tool on source and archetype round-tripped through ODIN P_* objects", ec_Test_source_roundtrip_button_tooltip)
			message_table.put ("Setting ADL roundtripping on will result in successfully compiled archetypes being unconditionally saved,%Noverwriting the current source. Saving normally occurs automatically when the original source has changed.%NThis option forces it. Useful for syntax upgrades and improving source file formatting.", ec_roundtripping_question)
			message_table.put ("Set ADL Source File Roundtripping", ec_roundtripping_dialog_title)
			message_table.put ("Parse", ec_Test_parse_test_title)
			message_table.put ("->flat", ec_Test_save_flat_test_title)
			message_table.put ("Compare flat", ec_Test_compare_flat_test_title)
			message_table.put ("Compare .adls", ec_Test_source_compare_test_title)
			message_table.put ("src AOM->ODIN", ec_Test_save_source_odin_test_title)
			message_table.put ("src AOM<-ODIN", ec_Test_read_source_odin_test_title)
			message_table.put ("Set differential archetype view", ec_set_differential_archetype_view)
			message_table.put ("Set flat archetype view", ec_set_flat_archetype_view)
			message_table.put ("Archetype ID namepace (reverse domin name of publisher)", ec_archetype_hrid_namespace_tooltip)
			message_table.put ("Archetype ID qualified RM class name as RM_publisher-RM_closure-RM_class_name", ec_archetype_hrid_qualified_rm_class_tooltip)
			message_table.put ("Archetype ID concept_id - human readable key to an ontology node", ec_archetype_hrid_concept_id_tooltip)
			message_table.put ("Archetype ID version ID, in form major.minor.patch [+|+u|-rc commit_number]", ec_archetype_hrid_version_id_tooltip)
			message_table.put ("Archetype lifecycle state", ec_archetype_lifecycle_tooltip)
			message_table.put ("If active, this archetype is the primary authoring source (active means is_generated=True)", ec_archetype_is_primary_source_button_text)
			message_table.put ("Form", ec_diff_flat_form_label)
			message_table.put ("View differential archetype form", ec_differential_view_button_tooltip)
			message_table.put ("View flat archetype form", ec_flat_view_button_tooltip)
			message_table.put ("Undo (ctrl-z)", ec_undo_button_tooltip)
			message_table.put ("Redo (ctrl-y)", ec_redo_button_tooltip)
			message_table.put ("Language", ec_language_label)
			message_table.put ("Select display language", ec_language_combo_tooltip)
			message_table.put ("Description", ec_description_tab_text)
			message_table.put ("Definition", ec_definition_tab_text)
			message_table.put ("Definition (OPT)", ec_definition_opt_tab_text)
			message_table.put ("Terminology", ec_terminology_tab_text)
			message_table.put ("Slots", ec_slots_tab_text)
			message_table.put ("Clients/Suppliers", ec_clients_suppliers_tab_text)
			message_table.put ("Interface", ec_interface_tab_text)
			message_table.put ("Annotations", ec_annotations_tab_text)
			message_table.put ("Serialised", ec_serialised_tab_text)
			message_table.put ("OPT", ec_opt_tab_text)
			message_table.put ("Serialised (diff)", ec_serialised_diff_tab_text)
			message_table.put ("Serialised (flat)", ec_serialised_flat_tab_text)
			message_table.put ("ADL", ec_source_tab_text)
			message_table.put ("Instance", ec_instance_tab_text)
			message_table.put ("Show XML $1 instance", ec_show_xml_instance_tooltip)
			message_table.put ("Show JSON $1 instance", ec_show_json_instance_tooltip)
			message_table.put ("Show YAML $1 instance", ec_show_yaml_instance_tooltip)
			message_table.put ("Validity", ec_validity_tab_text)
			message_table.put ("Statistics", ec_stat_info_tab_text)
			message_table.put ("Translation", ec_translation_tab_text)
			message_table.put ("Show ADL $1 serialisation", ec_show_adl_serialisation_tooltip)
			message_table.put ("Show ODIN $1 serialisation", ec_show_dadl_serialisation_tooltip)
			message_table.put ("Show XML $1 serialisation", ec_show_xml_serialisation_tooltip)
			message_table.put ("Show JSON $1 serialisation", ec_show_json_serialisation_tooltip)
			message_table.put ("Show YAML $1 serialisation", ec_show_yaml_serialisation_tooltip)
			message_table.put ("Commit changes to archetype", ec_commit_button_tooltip)
			message_table.put ("Wrote archetype $1 to file $2", ec_arch_editor_commit_notification)
			message_table.put ("Closure", ec_closure_tab_text)
			message_table.put ("Properties", ec_properties_tab_text)
			message_table.put ("Ancestors", ec_ancestors_tab_text)
			message_table.put ("Descendants", ec_descendants_tab_text)
			message_table.put ("Output Format", ec_serialise_frame_text)
			message_table.put ("Name", ec_enumeration_grid_enum_name_col_title)
			message_table.put ("Value", ec_enumeration_grid_enum_value_col_title)
			message_table.put ("Declared in", ec_property_grid_declared_in_col_title)
			message_table.put ("Property", ec_property_grid_property_col_title)
			message_table.put ("Type", ec_property_grid_property_type_col_title)
			message_table.put ("Governance", ec_governance_tab_text)
			message_table.put ("Authoring", ec_authoring_tab_text)
			message_table.put ("Details", ec_descriptive_tab_text)
			message_table.put ("Term Bindings", ec_term_bindings_tab_text)
			message_table.put ("Lifecycle state:", ec_lifecycle_state_label_text)
			message_table.put ("State in archetype lifecycle state machine", ec_lifecycle_state_label_tooltip)
			message_table.put ("Package", ec_package_frame_text)
			message_table.put ("Current Custodian", ec_custodian_frame_text)
			message_table.put ("  Namespace:", ec_custodian_namespace_label_text)
			message_table.put ("Organisation:", ec_custodian_organisation_label_text)
			message_table.put ("Original Publisher", ec_original_publisher_frame_text)
			message_table.put ("  Namespace:", ec_original_namespace_label_text)
			message_table.put ("Organisation:", ec_original_publisher_label_text)
			message_table.put ("     Copyright:", ec_copyright_label_text)
			message_table.put ("         Licence:", ec_licence_label_text)
			message_table.put ("Intellectual Property", ec_intellectual_property_frame_text)
			message_table.put ("IP%NAcknowledge%Nments:", ec_ip_acknowledgements_label_text)
			message_table.put ("    Conversion%N    Details:", ec_conversion_details_label_text)
			message_table.put ("Source Status", ec_source_status_frame_text)
			message_table.put ("Generated", ec_generated_status_label)
			message_table.put ("If true, this archetype was machine generated from another source, possibly an earlier ADL version, or a non-archetype artefact", ec_generated_status_tooltip)
			message_table.put ("Authorship", ec_auth_frame_text)
			message_table.put ("Details", ec_archetype_details_label_text)
			message_table.put ("Original Author", ec_auth_orig_auth_label_text)
			message_table.put ("Contributors", ec_auth_contrib_label_text)
			message_table.put ("Languages", ec_lang_frame_text)
			message_table.put ("Original language:", ec_original_language_label_text)
			message_table.put ("Translations", ec_trans_languages_label_text)
			message_table.put ("Translator", ec_translator_label_text)
			message_table.put ("Translator Accreditation", ec_accreditation_label_text)
			message_table.put ("Translator Other Details", ec_translator_other_details_label_text)
			message_table.put ("Purpose: ", ec_purpose_label_text)
			message_table.put ("        Use: ", ec_use_label_text)
			message_table.put ("  Misuse: ", ec_misuse_label_text)
			message_table.put ("Keywords", ec_keywords_label_text)
			message_table.put ("Resources", ec_resources_label_text)
			message_table.put ("       Package: ", ec_packages_label_text)
			message_table.put ("Original%NResource%NURIs", ec_resource_orig_res_label_text)
			message_table.put ("Terminology mappings", ec_terminology_label_text)
			message_table.put ("Refset bindings", ec_refset_bindings_label_text)
			message_table.put ("References", ec_references_tab_text)
			message_table.put ("    Other%N    Details: ", ec_other_details_label_text)
			message_table.put ("Other Details", ec_other_details_tab_text)
			message_table.put ("Archetype statistics (differential)", ec_arch_stats_list_title_diff)
			message_table.put ("Archetype metrics (differential)", ec_arch_metrics_list_title_diff)
			message_table.put ("Archetype metrics (flat)", ec_arch_metrics_list_title_flat)
			message_table.put ("RM breakdown (differential)", ec_breakdown_nb_title_diff)
			message_table.put ("RM breakdown (flat)", ec_breakdown_nb_title_flat)
			message_table.put ("Metric", ec_summary_list_metric_col_title)
			message_table.put ("Total", ec_summary_list_total_col_title)
			message_table.put ("Max", ec_summary_list_max_col_title)
			message_table.put ("Min", ec_summary_list_min_col_title)
			message_table.put ("Mean", ec_summary_list_mean_col_title)
			message_table.put ("Model element", ec_statistics_grid_model_element_name_col_title)
			message_table.put ("Total", ec_statistics_grid_model_element_count_col_title)
			message_table.put ("ADL 1.4 source", ec_adl_14_source_tab_text)
			message_table.put ("ADL 1.4 converted", ec_adl_14_converted_tab_text)
			message_table.put ("ADL $1 source", ec_adl_ver_source_tab_text)
			message_table.put ("ADL source", ec_adl_source_tab_text)
			message_table.put ("ADL $1 converted", ec_adl_converted_tab_text)
			message_table.put ("ADL $1 serialised", ec_adl_serialised_tab_text)
			message_table.put ("ADL $1 OPT", ec_adl_opt_tab_text)
			message_table.put ("Save source", ec_save_adl_converted_button_text)
			message_table.put ("Save ADL $1 converted output into .adls source file (overwrites current file)", ec_save_adl_converted_button_tooltip)
			message_table.put ("Save source", ec_save_adl_serialised_button_text)
			message_table.put ("Save ADL $1 serialised output into .adls source file (overwrites current file)", ec_save_adl_serialised_button_tooltip)
			message_table.put ("Saved ADL $1 serialised output into $2", ec_saved_serialised_msg)
			message_table.put ("Saved ADL $1 converted output into $2", ec_saved_converted_msg)
			message_table.put ("Wrote source to $1", ec_saved_source_msg)
			message_table.put ("Wrote ADL 1.4 source to $1", ec_saved_14_source_msg)
			message_table.put ("Symbolic form", ec_symbolic_text)
			message_table.put ("Show text using symbols rather than text rendering", ec_symbolic_text_tooltip)
			message_table.put ("Include RM", ec_flatten_with_rm_cb_text)
			message_table.put ("Include RM in flattening process, causing RM existence and cardinality to be included and occurrences to be generated", ec_flatten_with_rm_cb_tooltip)
			message_table.put ("Type marking", ec_type_marking_cb_text)
			message_table.put ("Add type marking to object formats, i.e. JSON, YAML, ODIN", ec_type_marking_cb_tooltip)
			message_table.put ("Save instance to file", ec_save_instance_dialog_title)
			message_table.put ("Save $1 file", ec_save_instance_to_file_title)
			message_table.put ("Original text", ec_translation_original_label_text)
			message_table.put ("Translated text", ec_translation_translated_label_text)
			message_table.put ("Add", ec_translate_button_text)
			message_table.put ("BMM model", ec_model_tree_node_tooltip)
			message_table.put ("Archetype model namespace", ec_rm_closure_tree_node_tooltip)
			message_table.put ("(source = legacy flat)", ec_archetype_tree_node_tooltip)
			message_table.put ("BMM Version:", ec_bmm_version_label)
			message_table.put ("Basic Meta-Model (BMM) version in which the RM schema was authored", ec_bmm_version_label_tooltip)
			message_table.put ("Group", ec_rm_desc_attr_group)
			message_table.put ("Attribute", ec_rm_desc_attr_name)
			message_table.put ("Value", ec_rm_desc_attr_value)
			message_table.put ("Metric", ec_rm_info_grid_metric_col_title)
			message_table.put ("Count", ec_rm_info_grid_count_col_title)
			message_table.put ("Class", ec_rm_terminology_class)
			message_table.put ("Property", ec_rm_terminology_property)
			message_table.put ("Type", ec_rm_terminology_property_type)
			message_table.put ("Value constraint", ec_rm_terminology_value_constraint)
			message_table.put ("Basic statistics", ec_stats_frame_text)
			message_table.put ("Terminology bindings", ec_term_bindings_frame_text)
			message_table.put ("$1 types", ec_rm_types_nb_tab_text)
			message_table.put ("Primitive types", ec_rm_primitive_types_nb_tab_text)
			message_table.put ("Id definitions and bindings", ec_id_defs_frame_text)
			message_table.put ("Term definitions and bindings", ec_term_defs_frame_text)
			message_table.put ("Constraint definitions and bindings", ec_constraint_defs_frame_text)
			message_table.put ("Ids", ec_term_defs_tab_text)
			message_table.put ("Values", ec_value_sets_tab_text)
			message_table.put ("Code", ec_value_sets_grid_col_code_text)
			message_table.put ("Values/ Value sets", ec_value_sets_grid_col_text_text)
			message_table.put ("Description", ec_value_sets_grid_col_description_text)
			message_table.put ("Code", ec_id_terms_grid_col_code_text)
			message_table.put ("Text", ec_id_terms_grid_col_text_text)
			message_table.put ("Description", ec_id_terms_grid_col_member_code_text)
			message_table.put ("Convert to subtype", ec_context_menu_convert_node_to_subtype)
end	
end