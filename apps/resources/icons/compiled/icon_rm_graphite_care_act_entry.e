note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_GRAPHITE_CARE_ACT_ENTRY

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/graphite/care_act_entry"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,CF,D5,DB) A(FF,7D,8F,A4) A(FF,4E,69,8A) A(FF,44,5E,7D) A(FF,48,62,82) A(FF,4E,68,87) 
					A(FF,90,9F,B2) A(FF,FB,FB,FB) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,B6,BF,CA) 
					A(FF,39,5E,8B) A(FF,4C,7F,BA) A(FF,3B,66,9C) A(FF,6F,82,9B) A(FF,5E,74,92) A(FF,34,5B,8B) A(FF,34,5B,8B) A(FF,67,7E,9A) A(FF,D7,DB,E1) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,D7,DB,E1) A(FF,3B,60,8D) A(FF,50,83,C0) A(FF,3D,6C,A4) A(FF,FF,FF,FF) A(00,00,00,00) 
					A(00,00,00,00) A(FF,75,88,A0) A(FF,3B,63,92) A(FF,3D,65,95) A(FF,6E,84,9D) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,FF,FF,FF) 
					A(FF,6F,83,9C) A(FF,4E,80,BC) A(FF,50,83,C0) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(FF,D6,DB,E2) A(FF,36,58,7F) A(FF,3F,67,97) 
					A(FF,32,59,88) A(FF,C4,CB,D3) A(00,00,00,00) A(00,00,00,00) A(FF,76,88,9F) A(FF,42,66,93) A(FF,3C,69,9E) A(FF,4F,81,BD) A(FF,4D,7E,B9) A(FF,39,5F,8E) 
					A(FF,36,52,76) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(FF,8A,99,AD) A(FF,3E,66,97) A(FF,40,69,99) A(FF,70,86,A0) A(00,00,00,00) A(00,00,00,00) 
					A(FF,C6,CC,D4) A(FF,39,60,8F) A(FF,50,82,BF) A(FF,4E,80,BC) A(FF,50,83,BF) A(FF,3A,5E,8A) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,3E,66,97) A(FF,30,57,86) A(FF,3F,67,97) A(FF,2E,52,7D) A(FF,E2,E5,EA) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,3D,6C,A5) A(FF,50,82,BF) 
					A(FF,3A,5D,87) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,3E,66,97) A(FF,2B,50,7C) A(FF,3F,67,97) A(FF,2D,54,82) 
					A(FF,C4,CB,D3) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,3B,5D,86) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(FF,3E,66,97) A(FF,23,47,72) A(FF,36,5E,8C) A(FF,28,4E,7D) A(FF,75,88,9E) A(00,00,00,00) A(00,00,00,00) A(FF,5C,73,8E) 
					A(FF,2F,54,80) A(FF,31,56,82) A(FF,4A,65,86) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) 
					A(FF,32,51,77) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(FF,54,71,94) A(FF,3D,65,95) A(FF,3F,68,98) A(FF,44,62,86) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,42,61,87) A(FF,4D,7F,BA) A(FF,37,62,94) A(FF,FF,FF,FF) A(00,00,00,00) 
					A(00,00,00,00) A(FF,94,A8,BF) A(FF,31,59,88) A(FF,3F,67,97) A(FF,2A,4E,7A) A(FF,CD,D7,E3) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) 
					A(FF,35,58,82) A(FF,4F,81,BC) A(FF,4E,80,BC) A(FF,4B,7A,B3) A(FF,64,7F,9F) A(FF,E1,E6,EA) A(00,00,00,00) A(FF,B5,C3,D3) A(FF,2F,52,7C) A(FF,3F,67,97) 
					A(FF,35,5C,8B) A(FF,89,98,AA) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,24,45,6D) A(FF,34,5F,94) A(FF,4E,80,BB) A(FF,4F,81,BD) A(FF,3F,6D,A4) 
					A(FF,2E,58,8B) A(FF,6D,81,98) A(00,00,00,00) A(00,00,00,00) A(FF,66,7C,96) A(FF,3E,67,97) A(FF,40,69,99) A(FF,48,63,84) A(00,00,00,00) A(00,00,00,00) 
					A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,50,82,BF) A(FF,4E,80,BC) A(FF,54,6D,8B) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) 
					A(FF,CE,D4,DB) A(FF,5A,75,94) A(FF,40,68,98) A(FF,32,59,88) A(FF,74,89,A3) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,41,71,AA) A(FF,51,83,C0) 
					A(FF,3B,60,8B) A(FF,AB,B9,C9) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,D7,DB,E1) A(FF,5C,75,94) A(FF,3B,63,93) 
					A(FF,31,57,85) A(FF,66,7C,96) A(FF,6E,83,9A) A(FF,3E,6B,A2) A(FF,4C,7E,B9) A(FF,3C,61,8C) A(FF,8B,9C,B2) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,E0,E4,E8) A(FF,A1,AD,BC) A(FF,42,5D,7F) A(FF,3C,58,79) A(FF,3C,58,7A) A(FF,43,60,82) 
					A(FF,84,94,A8) A(FF,D4,D9,E0) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end