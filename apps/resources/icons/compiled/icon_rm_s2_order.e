note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_GRAPHITE_ORDER

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/graphite/order"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(FF,5E,79,97) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,9A,B0,CA) A(FF,45,77,B0) A(FF,4B,5B,6D) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,4C,6D,94) A(FF,29,48,6D) A(FF,DD,D2,C6) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,8D,AE,D9) A(FF,64,7A,96) A(00,00,00,00) 
					A(FF,64,7C,99) A(FF,3B,63,93) A(FF,43,4D,58) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,83,8D,98) 
					A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,51,76,A2) A(FF,2B,4F,79) A(FF,8B,8D,8E) A(FF,83,93,A4) A(FF,3D,65,97) A(FF,2C,3F,52) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,4C,5F,75) A(FF,4A,58,6A) A(00,00,00,00) A(00,00,00,00) A(FF,7C,8F,A5) 
					A(FF,3B,64,95) A(FF,41,4C,5B) A(FF,FF,FF,FF) A(FF,37,5F,8D) A(FF,3E,51,66) A(00,00,00,00) A(FF,6D,7D,90) A(FF,64,7B,98) A(FF,64,7B,97) A(FF,64,7B,97) 
					A(FF,64,7B,97) A(FF,47,61,81) A(FF,71,7B,88) A(FF,2B,3E,53) A(00,00,00,00) A(FF,7B,8A,9B) A(FF,3D,64,95) A(FF,25,37,4D) A(00,00,00,00) A(FF,4E,71,9B) 
					A(FF,2B,42,5B) A(00,00,00,00) A(FF,2F,3F,53) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,FF,FF,FF) A(FF,9D,A8,B4) 
					A(FF,4C,5B,6E) A(FF,FF,FF,FF) A(FF,36,5F,90) A(FF,44,53,67) A(00,00,00,00) A(FF,5C,7B,A0) A(FF,1E,38,58) A(FF,FF,FF,FF) A(FF,31,40,52) A(FF,E7,E9,ED) 
					A(FF,EB,EE,F2) A(FF,EB,EE,F2) A(FF,EB,EE,F2) A(FF,EA,ED,F1) A(FF,FF,FF,FF) A(FF,6B,80,9A) A(FF,80,8B,97) A(FF,F5,F4,F2) A(FF,38,61,96) A(FF,52,60,71) 
					A(00,00,00,00) A(FF,5D,7B,A3) A(FF,1A,34,53) A(FF,FF,FF,FF) A(FF,80,91,A5) A(FF,5F,77,94) A(FF,5E,76,93) A(FF,5E,76,93) A(FF,5E,76,94) A(FF,3C,57,78) 
					A(FF,39,4C,65) A(FF,92,9A,A5) A(00,00,00,00) A(FF,84,93,A6) A(FF,3E,69,9D) A(FF,31,41,54) A(00,00,00,00) A(FF,56,78,A3) A(FF,1C,35,50) A(FF,FF,FF,FF) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,37,4A,61) A(FF,85,8E,9B) A(00,00,00,00) A(00,00,00,00) A(FF,84,9A,B4) 
					A(FF,3D,68,9B) A(FF,4C,57,64) A(FF,FF,FF,FF) A(FF,41,6B,9E) A(FF,2C,40,56) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,C0,C6,CC) A(00,00,00,00) A(00,00,00,00) A(FF,87,90,B5) A(FF,4D,7B,B0) A(FF,25,45,6A) A(FF,92,98,9E) A(FF,8F,9C,AE) A(FF,3F,6B,9F) 
					A(FF,3B,4A,5C) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,FF,FF,FF) A(FF,68,84,A1) A(FF,4A,5B,6F) A(00,00,00,00) A(FF,76,8F,AC) A(FF,3F,69,9A) A(FF,47,53,62) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,10,39,6A) A(FF,FF,FF,FF) A(00,00,00,00) 
					A(FF,59,80,AD) A(FF,2A,4A,70) A(FF,8B,90,97) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,8B,A3,C0) A(FF,41,70,A8) A(FF,3D,4D,62) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,E8,EE,F3) A(FF,50,68,85) A(FF,9B,A5,AE) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end