note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_GRAPHITE_INTERVAL_DATE_TIME

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/graphite/interval_date_time"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,70,8B,AC) A(00,00,00,00) A(00,00,00,00) A(25,9E,AC,BD) A(58,68,82,A1) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(07,BB,C8,D6) A(52,5E,78,9A) 
					A(CD,4D,6E,98) A(E4,2C,4F,7A) A(FF,40,62,8B) A(FF,2F,4D,72) A(0C,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(6A,66,74,85) A(FF,47,61,82) A(FE,9B,AA,BE) A(FF,FF,FF,FF) A(FF,F7,F9,FC) A(FF,49,5D,78) 
					A(0B,71,99,C0) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(33,40,53,69) A(FF,5F,73,8D) A(FF,FF,FF,FF) A(FF,89,89,89) A(FF,F4,F3,F3) A(FF,52,65,7E) A(3B,9D,B0,C6) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(35,98,A3,AE) A(FF,4C,62,7E) A(FF,FF,FF,FF) A(FF,DD,DD,DD) 
					A(FF,E6,E5,E5) A(FF,65,75,89) A(2A,3D,5F,89) A(0C,7F,85,88) A(00,FF,FF,FF) A(00,00,00,00) A(00,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(0C,B3,BB,C3) A(FF,3F,56,74) A(FF,FF,FF,FF) A(FF,BA,BA,BA) A(FF,FF,FF,FF) A(FF,73,81,92) A(FC,4B,6D,95) A(FF,55,70,92) 
					A(FF,4E,6B,8D) A(A9,3B,53,70) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(06,FF,FF,FF) A(FF,2B,45,65) 
					A(FF,FF,FF,FF) A(FF,97,97,97) A(FF,E3,E1,DE) A(FF,7A,90,AC) A(FF,A2,A7,AE) A(FF,CC,CB,CA) A(FE,FF,FF,FF) A(FF,6F,84,9D) A(69,38,45,54) A(00,49,4A,4B) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,29,43,63) A(FF,E4,E8,EC) A(FF,90,A6,C1) A(FF,49,67,8E) A(FF,15,2E,4D) 
					A(FF,D9,E2,EE) A(FF,CA,BD,BD) A(FF,AC,AE,AD) A(FF,A6,B4,C4) A(A2,22,39,55) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(93,58,70,8E) A(EF,33,48,62) 
					A(A1,4F,60,76) A(FF,44,59,73) A(BC,3D,5D,86) A(6B,4E,62,7D) A(00,00,00,00) A(CF,35,50,71) A(FE,CB,B0,AF) A(FF,ED,D1,D0) A(FF,FF,FF,FF) A(FE,A4,B5,C9) 
					A(83,3E,4B,59) A(FF,4F,65,80) A(EF,30,45,5F) A(7B,69,78,8B) A(9B,57,79,A3) A(FF,52,7A,AA) A(C8,4E,63,7E) A(00,00,00,00) A(00,00,00,00) A(00,B1,B8,C0) 
					A(00,8D,98,A5) A(2B,73,82,92) A(FF,41,60,81) A(FF,73,8D,AB) A(FF,7D,96,B6) A(E9,37,51,70) A(00,00,00,00) A(FF,66,8A,B6) A(FF,3B,5E,8A) A(7F,60,71,88) 
					A(9B,57,79,A3) A(FF,50,78,A7) A(DA,49,60,7D) A(5B,55,73,96) A(60,57,75,97) A(60,57,75,97) A(60,57,75,97) A(60,57,75,97) A(65,68,84,A5) A(B5,57,71,8F) 
					A(B4,59,70,8B) A(51,5B,7B,9F) A(55,5D,77,99) A(FF,61,85,B1) A(FF,3A,5E,89) A(7F,60,72,88) A(9B,57,79,A3) A(FF,50,78,A7) A(FF,44,60,84) A(FF,56,7F,AF) 
					A(FF,56,7E,AE) A(FF,56,7E,AE) A(FF,56,7E,AE) A(FF,56,7E,AE) A(FF,56,7E,AE) A(FF,56,7E,AE) A(FF,56,7E,AE) A(FF,57,7F,AF) A(FF,2F,4C,6E) A(FE,60,85,B3) 
					A(FF,3A,5E,89) A(7F,60,72,88) A(9B,57,79,A3) A(FF,50,78,A7) A(FF,3F,58,76) A(FF,4C,65,84) A(FF,4C,65,84) A(FF,4C,65,84) A(FF,4C,65,84) A(FF,4C,65,84) 
					A(FF,4C,65,84) A(FF,4C,65,84) A(FF,4C,65,84) A(FF,4B,65,84) A(FF,3F,55,6F) A(FD,5E,83,B1) A(FF,3A,5E,89) A(7F,60,72,88) A(9B,57,79,A3) A(FF,50,78,A7) 
					A(C0,4F,63,7E) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,65,89,B4) A(FF,3A,5E,89) A(7F,60,72,88) A(9D,57,79,A4) A(FF,45,6D,9B) A(C9,4C,63,7F) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,5C,7F,AB) A(FF,38,5C,88) A(80,5F,71,87) 
					A(3C,63,74,8A) A(5F,55,65,7B) A(4A,6B,7C,92) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(69,63,73,89) A(5F,52,64,7A) A(33,7E,8E,A4) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end