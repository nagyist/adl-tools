note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_S2_AGENT

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/s2/agent"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,5E,71,6C) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(2C,E3,E5,E5) A(CA,DC,DC,D9) A(C5,DF,DF,DB) 
					A(9B,D7,D7,D5) A(90,D7,D8,D6) A(7F,D6,D8,D7) A(6B,DB,DD,DD) A(56,CF,D1,D2) A(36,9D,9E,9F) A(3A,B9,BA,B9) A(0F,9E,9D,9E) A(08,FF,FF,FF) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(51,EC,EB,E7) A(FF,5E,78,95) A(FF,51,71,97) A(FF,61,7E,9E) A(FF,6E,88,A4) A(FE,7C,91,AA) A(FF,8B,9D,B0) 
					A(FF,9B,A9,B7) A(FF,A6,B2,BD) A(FF,AC,B6,BF) A(FF,B3,B9,BF) A(FF,B5,B7,B8) A(FF,C1,C0,BC) A(FE,BA,BA,B8) A(7A,D7,D9,D9) A(00,00,00,00) A(7F,EE,EC,E7) 
					A(FF,45,64,89) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3D,65,94) A(FF,3B,63,91) A(FF,37,5E,8C) A(FF,35,5C,89) 
					A(FF,36,5E,8D) A(FF,33,5B,8B) A(FF,55,6A,84) A(5E,F1,F3,F0) A(00,00,00,00) A(A5,E0,DE,D8) A(FE,34,57,81) A(FF,3F,65,93) A(FF,3F,66,94) A(FF,3F,66,94) 
					A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3E,66,94) A(FF,3F,67,95) A(FF,57,68,7D) A(64,FA,FC,FB) 
					A(00,00,00,00) A(C5,C5,C3,BE) A(FF,2C,52,81) A(FF,3F,66,93) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) 
					A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,40,67,96) A(FF,66,73,83) A(0F,FF,FF,FF) A(00,00,00,00) A(EF,A6,A7,A7) A(FF,33,5A,89) A(FF,3E,66,94) 
					A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,67,97) 
					A(FF,74,7F,8A) A(21,FF,FF,FF) A(00,00,00,00) A(FF,92,96,9C) A(FF,37,5F,8D) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) 
					A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3E,66,96) A(FF,85,8C,94) A(1F,ED,F0,F0) A(00,00,00,00) A(FF,85,8C,95) 
					A(FF,3A,62,90) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) 
					A(FF,3F,66,94) A(FF,3A,63,93) A(FF,A0,A4,A7) A(0F,D0,D1,D4) A(13,D3,D3,D6) A(FF,80,8A,97) A(FF,3E,65,94) A(FF,3F,66,93) A(FF,3F,66,93) A(FF,3F,66,94) 
					A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,3F,66,94) A(FF,34,5D,8D) A(FF,B5,B6,B6) A(06,FF,FF,FF) 
					A(3B,CC,CD,CE) A(FF,95,9F,A9) A(FF,60,7B,9B) A(FE,50,70,95) A(FE,41,65,8E) A(FF,32,58,87) A(FF,33,5A,8A) A(FF,36,5F,90) A(FF,39,62,93) A(FF,3B,64,93) 
					A(FF,3D,65,94) A(FF,3E,65,94) A(FF,3F,66,94) A(FF,2D,54,83) A(FF,C9,C8,C6) A(00,00,00,00) A(0A,D1,D0,D1) A(46,BB,BC,BD) A(67,C8,C8,C7) A(7E,CF,CF,CB) 
					A(9C,DE,DC,D8) A(C7,E1,DF,DA) A(FF,D2,D2,D1) A(FF,BE,C0,C1) A(FF,AF,B5,BB) A(FF,A7,B3,BE) A(FE,98,A8,B9) A(FF,83,9A,B0) A(FF,6E,8A,A8) A(FE,4E,6B,90) 
					A(FF,D5,D5,D3) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(95,E3,E5,E4) A(FF,DE,DF,DE) A(FE,CF,D0,CF) A(FF,C3,C3,C4) 
					A(FF,C7,C7,C8) A(FF,B9,BA,BB) A(FF,B6,B8,B8) A(AF,C2,C3,C3) A(88,CC,CC,CA) A(A8,D1,D1,CD) A(9D,C1,C3,C5) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(31,E6,E7,E6) A(FF,C7,C8,C8) A(FF,C9,CA,C9) A(FF,CC,CE,CD) A(FF,D2,D4,D3) A(FF,D2,D3,D3) A(FF,D0,D1,D1) A(FF,E1,E2,E1) A(FF,DC,DD,DD) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,C8,C9,C9) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(02,2D,27,2A) A(E9,C7,C8,C8) A(FF,F1,F1,F1) 
					A(FE,EF,EF,EF) A(FF,ED,EE,EE) A(FE,EE,EF,EF) A(FE,F0,F1,F0) A(FF,E1,E2,E3) A(A3,AF,B1,B1) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,8F,90,8F) A(00,00,00,00) A(5F,93,94,95) A(91,B5,B6,B7) A(AE,C3,C4,C5) A(A1,BB,BC,BD) A(8B,AA,AC,AD) 
					A(31,77,79,79) A(00,00,00,00) A(00,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end