note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_S2_OBJECT_REF

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/s2/object_ref"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,81,8C,9A) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(88,57,69,7E) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(FF,2E,4D,75) A(AB,4C,61,7A) A(00,00,00,00) A(00,FA,F9,F4) A(00,00,00,00) A(93,53,6C,8B) A(EF,63,88,B5) A(EF,62,86,B3) A(EF,62,86,B3) 
					A(EF,62,86,B3) A(EF,62,86,B3) A(EF,62,86,B3) A(EF,62,86,B3) A(EF,62,86,B3) A(EF,62,86,B3) A(ED,65,89,B6) A(FF,45,69,97) A(FF,3A,60,8F) A(CF,3F,58,77) 
					A(00,00,00,00) A(00,7F,89,97) A(9B,42,5C,7C) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) 
					A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,93) A(FF,40,66,95) A(FE,3E,64,93) A(FD,3D,63,93) A(E6,3C,58,7A) A(12,A9,AD,B4) A(9B,42,5C,7C) A(FF,3F,66,95) 
					A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) A(FF,3E,65,94) 
					A(FF,3F,64,93) A(FF,3F,66,94) A(FF,32,4D,6D) A(69,60,6F,81) A(A0,3E,57,76) A(FF,37,55,7C) A(FF,36,54,7A) A(FF,36,54,7A) A(FF,36,54,7A) A(FF,36,54,7A) 
					A(FF,36,54,7A) A(FF,36,54,7A) A(FF,36,54,7A) A(FF,36,54,7A) A(FF,35,54,7A) A(FE,3D,5F,8A) A(FE,40,66,94) A(FF,33,4A,65) A(3D,70,7A,86) A(00,00,00,00) 
					A(23,9A,AC,BF) A(37,99,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) A(37,98,AB,C2) 
					A(28,CF,DD,ED) A(FF,34,54,7C) A(FB,38,4C,63) A(22,8D,95,A0) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(F2,37,4A,63) A(02,FF,FF,FF) A(00,85,8F,9D) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(02,FF,FF,FF) A(00,AE,B6,BF) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end