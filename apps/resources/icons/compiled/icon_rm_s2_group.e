note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_S2_GROUP

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/s2/group"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(10,81,87,89) A(63,47,44,43) A(51,5F,60,5F) A(00,00,00,00) A(00,C1,C2,C2) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,70,70,6F) A(3B,61,60,5E) A(FF,58,54,51) 
					A(FF,45,41,3E) A(FF,22,1E,1C) A(D4,37,37,36) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(E9,44,42,41) A(FF,6D,60,54) A(FF,6D,61,54) A(FE,53,42,32) A(FF,5C,31,17) A(38,BB,8B,7D) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,92,70,60) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,43,3D,39) A(FF,94,78,5D) A(FF,DE,B1,84) A(FF,C7,89,52) A(FF,9E,4E,1C) A(78,9F,5F,41) A(00,00,00,00) A(7F,97,47,2A) A(C4,AB,47,22) A(B4,B2,4D,21) 
					A(5E,A5,5C,3E) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(9F,8D,5A,3D) A(FF,B7,6F,37) A(FF,B8,75,3E) A(FF,A8,5D,28) 
					A(FF,9B,48,1A) A(2C,A0,77,71) A(B9,8B,3D,26) A(FF,9F,29,00) A(FE,B9,48,0C) A(FF,C9,59,1B) A(FF,BD,42,09) A(82,A2,4D,2B) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,EE,A5,58) A(09,FF,FF,FF) A(FF,AF,6B,40) A(FF,88,2F,03) A(FF,8D,3A,17) A(F8,B3,81,5E) A(62,A9,77,4A) A(FF,74,12,00) A(FE,98,29,00) 
					A(FF,AE,3B,02) A(FF,BE,4B,0F) A(FF,AE,3C,06) A(DD,B4,65,38) A(00,00,00,00) A(00,00,00,00) A(00,DC,FF,FF) A(10,D5,A0,7F) A(FD,F4,A1,3B) A(FF,FF,BB,5C) 
					A(FF,F4,F1,E1) A(FF,7E,80,D7) A(FF,C1,B8,B1) A(FF,99,3B,00) A(FE,68,0F,00) A(FF,A2,50,22) A(FF,E8,B8,76) A(FF,E4,BA,83) A(FF,F4,CA,8D) A(F1,EA,B3,6D) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(A7,EF,A2,45) A(FE,FB,A4,35) A(FF,FA,AF,4E) A(FF,FD,A3,32) A(FF,C0,BB,D7) A(FF,6B,6A,C0) A(FF,AA,46,00) 
					A(FF,5A,0A,00) A(FF,93,44,1D) A(FF,E7,A9,5C) A(FF,EA,B2,6A) A(FE,E8,AF,66) A(D6,DF,A2,5C) A(00,00,00,00) A(00,00,00,00) A(72,EC,F9,FF) A(FE,EC,90,2A) 
					A(FF,FB,9C,28) A(FF,F0,88,12) A(FF,ED,83,0F) A(FF,E3,7D,1F) A(FF,02,10,B0) A(FF,AF,4E,00) A(FF,63,14,00) A(FF,79,2D,10) A(FF,DE,93,44) A(FF,DB,92,44) 
					A(FF,D9,8B,39) A(58,AF,8F,98) A(00,00,00,00) A(00,00,00,00) A(F3,DC,E5,ED) A(FE,DC,6F,04) A(FF,F1,7C,02) A(FF,F0,7A,02) A(FF,D2,66,00) A(FF,BC,58,00) 
					A(FF,58,34,63) A(FF,98,42,00) A(FF,5E,3F,5E) A(FF,3D,21,67) A(FF,DE,BE,96) A(FF,D8,B5,95) A(FE,F5,F1,E9) A(FF,8D,93,DB) A(65,80,88,DB) A(00,00,00,00) 
					A(21,D3,DC,E1) A(EC,BA,8C,65) A(FF,BA,52,00) A(FF,C2,5A,00) A(FF,BC,56,00) A(FF,A0,46,00) A(FF,94,5A,2B) A(EA,67,55,77) A(FE,12,1E,AE) A(FF,36,42,C5) 
					A(FF,76,7D,C7) A(FF,E3,E5,DD) A(FF,F3,F5,F1) A(FF,A8,AD,E0) A(FF,84,89,D6) A(10,56,61,D0) A(00,D1,DB,DF) A(00,00,00,00) A(3F,B9,D3,E2) A(60,92,79,68) 
					A(60,8B,76,65) A(4B,AF,C2,CB) A(00,00,00,00) A(FA,23,28,9F) A(FF,13,1A,A1) A(FF,1A,22,A5) A(FF,3F,4A,C4) A(FF,9E,A4,CA) A(FF,E1,E5,E0) A(FF,9C,A2,D7) 
					A(FF,74,7A,D1) A(77,67,6F,D1) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(17,EF,EF,F0) A(6E,F3,F1,EC) A(FF,02,08,89) 
					A(FF,12,18,9D) A(FF,16,1E,A4) A(FF,20,29,AA) A(FF,3C,46,C2) A(FF,BD,C2,C7) A(FF,88,8F,C9) A(FF,57,60,C9) A(93,52,5B,C7) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(D9,E6,E6,E7) A(FF,DA,DB,DE) A(FE,00,02,86) A(FF,0F,15,94) A(FF,12,1A,A0) A(FF,19,21,A7) A(FF,21,2A,AA) 
					A(FF,45,4F,BD) A(FF,80,88,C3) A(FF,30,3B,BD) A(73,9F,A2,D4) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,E6,E6,E7) A(14,E3,E4,E4) 
					A(DF,E1,E0,DC) A(FF,2B,30,95) A(FE,07,0C,8E) A(FF,0E,14,95) A(FF,11,17,9C) A(FE,0F,18,9F) A(FF,09,12,9F) A(FF,57,5E,BD) A(9E,B9,B9,D4) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,DB,DB,DD) A(00,00,00,00) A(4B,F3,F1,DE) A(8F,7E,7F,AC) A(9B,4B,4E,9E) 
					A(9B,49,4C,A0) A(8F,6B,6D,AD) A(6C,CF,CE,CF) A(06,FF,FF,FF) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end