note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_S2_INFO_NODE_SLOT

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/s2/info_node_slot"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) 
					A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) 
					A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) 
					A(FF,01,34,8D) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,A8,B2,BE) A(FF,B0,8F,08) A(FF,B0,8F,08) A(FF,B0,8F,08) A(FF,77,87,9F) A(FF,F8,F8,F8) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,B0,8F,08) 
					A(FF,B0,8F,08) A(FF,F2,D9,0A) A(FF,F2,D9,0A) A(FF,F2,D9,0A) A(FF,B0,8F,08) A(FF,73,5D,05) A(FF,CD,D0,D3) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(00,00,00,00) A(FF,72,82,97) A(FF,B0,8F,08) A(FF,F0,C2,0A) A(FF,F2,C4,0B) A(FF,FF,C9,0E) A(FF,F2,C4,0B) 
					A(FF,F2,C4,0B) A(FF,E0,B6,0A) A(FF,73,5D,05) A(FF,FF,FF,FE) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(FF,FF,FF,FF) 
					A(FF,73,5D,05) A(FF,E0,B6,0A) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,F2,C4,0B) A(FF,E0,B6,0A) A(FF,B0,8F,08) A(FF,58,60,6B) 
					A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(FF,9F,A5,AD) A(FF,E0,B6,0A) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,FF,C9,0E) 
					A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,F2,C4,0B) A(FF,E0,B6,0A) A(FF,3D,49,52) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) 
					A(00,00,00,00) A(FF,93,9A,A5) A(FF,E0,B6,0A) A(FF,F2,C4,0B) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) 
					A(FF,E0,B6,0A) A(FF,43,4F,52) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(FF,B0,B5,BB) A(FF,73,5D,05) A(FF,F2,C4,0B) 
					A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,E0,B6,0A) A(FF,73,5D,05) A(00,00,00,00) A(00,00,00,00) 
					A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(FF,FF,FF,FF) A(FF,73,5D,05) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,FF,C9,0E) A(FF,FF,C9,0E) A(FF,F2,C4,0B) 
					A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,B0,8F,08) A(FF,79,7D,86) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(00,00,00,00) 
					A(FF,B5,BC,C6) A(FF,73,5D,05) A(FF,E0,B6,0A) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,F2,C4,0B) A(FF,E0,B6,0A) A(FF,B0,8F,08) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,B9,C1,CD) A(FF,B0,8F,08) A(FF,B0,8F,08) 
					A(FF,E0,B6,0A) A(FF,E0,B6,0A) A(FF,B0,8F,08) A(FF,B0,8F,08) A(FF,FC,FC,FD) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,FA,FB,FD) A(FF,9C,A7,B7) A(FF,80,8F,A5) A(FF,7A,87,9B) A(FF,B5,BB,C3) A(FF,FF,FF,FF) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(FF,00,00,80) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) 
					A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(FF,00,00,80) A(00,00,00,00) 
					A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) 
					A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) A(FF,01,34,8D) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end