note
	description: "Icon loader class generated by icon_code_gen"
	keywords:    "Embedded icons"
	author:      "Thomas Beale <thomas.beale@oceaninformatics.com>"
	support:     "http://www.openehr.org/issues/browse/AWB"
	copyright:   "Copyright (c) 2013- Ocean Informatics Pty Ltd"
	license:     "Apache 2.0 License <http://www.apache.org/licenses/LICENSE-2.0.html>"

class ICON_RM_S2_QUERY_CALL

inherit
	ICON_SOURCE

create
	make

feature {NONE} -- Initialization

	make
			-- Initialization
		do
			key := "rm/s2/query_call"
			make_with_size (16, 16)
			fill_memory
		end

feature {NONE} -- Image data
	
	c_colors_0 (a_ptr: POINTER; a_offset: INTEGER)
			-- Fill `a_ptr' with colors data from `a_offset'.
		external
			"C inline"
		alias
			"{
				{
					#define B(q) #q
					#ifdef EIF_WINDOWS
						#define A(a,r,g,b) B(\x##b\x##g\x##r\x##a)
					#else
						#define A(a,r,g,b) B(\x##r\x##g\x##b\x##a)
					#endif

					char l_data[] =
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(A8,64,64,64) A(53,62,62,62) A(53,62,62,62) A(A8,64,64,64) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(53,62,62,62) A(A8,64,64,64) A(00,00,00,00) 
					A(00,00,00,00) A(A8,64,64,64) A(53,62,62,62) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(53,62,62,62) A(FF,64,64,64) A(FF,64,64,64) A(8C,64,64,64) 
					A(D3,63,63,63) A(1B,5E,5E,5E) A(0E,5B,5B,5B) A(B6,63,63,63) A(37,61,61,61) A(00,00,00,00) A(00,00,00,00) A(37,61,61,61) A(B6,63,63,63) A(0E,5B,5B,5B) 
					A(00,00,00,00) A(1B,5E,5E,5E) A(E1,64,64,64) A(53,62,62,62) A(00,00,00,00) A(A8,64,64,64) A(E1,64,64,64) A(1B,5E,5E,5E) A(37,61,61,61) A(B6,63,63,63) 
					A(0E,5B,5B,5B) A(00,00,00,00) A(00,00,00,00) A(0E,5B,5B,5B) A(B6,63,63,63) A(37,61,61,61) A(00,00,00,00) A(53,62,62,62) A(E1,64,64,64) A(1B,5E,5E,5E) 
					A(00,00,00,00) A(37,61,61,61) A(D3,63,63,63) A(1B,5E,5E,5E) A(53,62,62,62) A(A8,64,64,64) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(A8,64,64,64) A(53,62,62,62) A(00,00,00,00) A(53,62,62,62) A(C4,63,63,63) A(0E,5B,5B,5B) A(00,00,00,00) A(37,61,61,61) A(D3,63,63,63) A(1B,5E,5E,5E) 
					A(7E,63,63,63) A(A8,64,64,64) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(A8,64,64,64) A(53,62,62,62) A(00,00,00,00) A(53,62,62,62) 
					A(E1,64,64,64) A(1B,5E,5E,5E) A(00,00,00,00) A(37,61,61,61) A(D3,63,63,63) A(1B,5E,5E,5E) A(53,62,62,62) A(A8,64,64,64) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(A8,64,64,64) A(53,62,62,62) A(00,00,00,00) A(1B,5E,5E,5E) A(E1,64,64,64) A(7E,63,63,63) A(00,00,00,00) A(A8,64,64,64) 
					A(E1,64,64,64) A(1B,5E,5E,5E) A(37,61,61,61) A(B6,63,63,63) A(0E,5B,5B,5B) A(00,00,00,00) A(00,00,00,00) A(0E,5B,5B,5B) A(B6,63,63,63) A(37,61,61,61) 
					A(00,00,00,00) A(00,00,00,00) A(37,61,61,61) A(F0,64,64,64) A(FF,64,64,64) A(B6,63,63,63) A(D3,63,63,63) A(1B,5E,5E,5E) A(0E,5B,5B,5B) A(B6,63,63,63) 
					A(37,61,61,61) A(00,00,00,00) A(00,00,00,00) A(37,61,61,61) A(B6,63,63,63) A(0E,5B,5B,5B) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(37,61,61,61) A(D3,63,63,63) A(1B,5E,5E,5E) A(00,00,00,00) A(53,62,62,62) A(A8,64,64,64) A(00,00,00,00) A(00,00,00,00) A(A8,64,64,64) 
					A(53,62,62,62) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(37,61,61,61) A(D3,63,63,63) A(1B,5E,5E,5E) 
					A(00,00,00,00) A(00,00,00,00) A(A8,64,64,64) A(53,62,62,62) A(53,62,62,62) A(A8,64,64,64) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) 
					A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) A(00,00,00,00) ;
					memcpy ((EIF_NATURAL_32 *)$a_ptr + $a_offset, &l_data, sizeof l_data - 1);
				}
			}"
		end

	build_colors (a_ptr: POINTER)
			-- Build `colors'
		do
			c_colors_0 (a_ptr, 0)
		end

end